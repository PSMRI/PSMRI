{
    "swagger": "2.0",
    "info": {
        "description": "A user-friendly interface for managing your application.",
        "version": "1.0",
        "title": "Admin API",
        "termsOfService": "Terms of service",
        "contact": {
            "name": "AMRIT",
            "url": "https://psmri.github.io/PSMRI/",
            "email": "amrit@piramalswasthya.org"
        },
        "license": {}
    },
    "host": "localhost:7078",
    "basePath": "/",
    "tags": [
        {
            "name": "user-parking-place-map-controller",
            "description": "User Parking Place Map Controller"
        },
        {
            "name": "store-controller",
            "description": "Store Controller"
        },
        {
            "name": "care-stream-create-order-controller",
            "description": "Care Stream Create Order Controller"
        },
        {
            "name": "van-master-controller",
            "description": "Van Master Controller"
        },
        {
            "name": "manufacturer-controller",
            "description": "Manufacturer Controller"
        },
        {
            "name": "employee-signature-controller",
            "description": "Employee Signature Controller"
        },
        {
            "name": "provider-on-board-controller",
            "description": "Provider On Board Controller"
        },
        {
            "name": "drugtype-controller",
            "description": "Drugtype Controller"
        },
        {
            "name": "parking-place-taluk-mapping-controller",
            "description": "Parking Place Taluk Mapping Controller"
        },
        {
            "name": "questionnaire-controller",
            "description": "Questionnaire Controller"
        },
        {
            "name": "lab-module-controller",
            "description": "Lab Module Controller"
        },
        {
            "name": "blocking-controller",
            "description": "Blocking Controller"
        },
        {
            "name": "swy-med-controller",
            "description": "Swy Med Controller"
        },
        {
            "name": "facilitytype-controller",
            "description": "Facilitytype Controller"
        },
        {
            "name": "version-controller",
            "description": "Version Controller"
        },
        {
            "name": "calibration-controller",
            "description": "Calibration Controller"
        },
        {
            "name": "fetosense-controller",
            "description": "Fetosense Controller"
        },
        {
            "name": "zone-master-controller",
            "description": "Zone Master Controller"
        },
        {
            "name": "service-point-controller",
            "description": "Service Point Controller"
        },
        {
            "name": "supplier-master-controller",
            "description": "Supplier Master Controller"
        },
        {
            "name": "item-controller",
            "description": "Item Controller"
        },
        {
            "name": "employee-master-controller",
            "description": "Employee Master Controller"
        },
        {
            "name": "parking-place-controller",
            "description": "Parking Place Controller"
        },
        {
            "name": "van-spoke-mapping-controller",
            "description": "Van Spoke Mapping Controller"
        },
        {
            "name": "pharmacological-category-controller",
            "description": "Pharmacological Category Controller"
        },
        {
            "name": "snomed-mapping-controller",
            "description": "Snomed Mapping Controller"
        },
        {
            "name": "facility-controller",
            "description": "Facility Controller"
        },
        {
            "name": "location-master-controller",
            "description": "Location Master Controller"
        },
        {
            "name": "tele-medicine-controller",
            "description": "Tele Medicine Controller"
        },
        {
            "name": "uom-controller",
            "description": "Uom Controller"
        },
        {
            "name": "m-item-facility-mapping-controller",
            "description": "M Item Facility Mapping Controller"
        },
        {
            "name": "role-master-controller",
            "description": "Role Master Controller"
        },
        {
            "name": "drug-srangth",
            "description": "Drug Srangth"
        },
        {
            "name": "iot-controller",
            "description": "IOT Controller"
        },
        {
            "name": "nodal-config-controller",
            "description": "Nodal Config Controller"
        },
        {
            "name": "email-config-controller",
            "description": "Email Config Controller"
        },
        {
            "name": "stock-entry-controller",
            "description": "Stock Entry Controller"
        },
        {
            "name": "stock-exit-controller",
            "description": "Stock Exit Controller"
        },
        {
            "name": "van-service-point-mapping-controller",
            "description": "Van Service Point Mapping Controller"
        },
        {
            "name": "village-master-controller",
            "description": "Village Master Controller"
        }
    ],
    "paths": {
        "/TM/activateUserSpecialization": {
            "post": {
                "tags": [
                    "tele-medicine-controller"
                ],
                "summary": "Activate user specialization",
                "operationId": "saveUserSpecializationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userSpecializationMapping",
                        "description": "userSpecializationMapping",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserSpecializationMapping"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/TM/getSpecialization": {
            "post": {
                "tags": [
                    "tele-medicine-controller"
                ],
                "summary": "Get specialization",
                "operationId": "getSpecializationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/TM/getUser": {
            "post": {
                "tags": [
                    "tele-medicine-controller"
                ],
                "summary": "Get user",
                "operationId": "getUserTMUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "tminput",
                        "description": "tminput",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TMinput"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/TM/getUserSpecialization": {
            "post": {
                "tags": [
                    "tele-medicine-controller"
                ],
                "summary": "Get user specialization",
                "operationId": "getUserSpecializationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "tminput",
                        "description": "tminput",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TMinput"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/TM/saveUserSpecialization": {
            "post": {
                "tags": [
                    "tele-medicine-controller"
                ],
                "summary": "Save user specialization",
                "operationId": "saveUserSpecializationUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userSpecializationMapping",
                        "description": "userSpecializationMapping",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserSpecializationMapping"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/UpdateOrder": {
            "post": {
                "tags": [
                    "care-stream-create-order-controller"
                ],
                "summary": "Update order",
                "operationId": "UpdateOrderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "UpdateOrder",
                        "description": "UpdateOrder",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/addFacility": {
            "post": {
                "tags": [
                    "facilitytype-controller"
                ],
                "summary": "Add facility",
                "operationId": "addFacilityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "addFacility",
                        "description": "addFacility",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/addProviderStateAndServiceLines": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Provider state and service lines",
                "operationId": "ProviderStateAndServiceLinesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProviderStateAndServiceLines",
                        "description": "ProviderStateAndServiceLines",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/allocateStockFromItemID/{facilityID}": {
            "post": {
                "tags": [
                    "stock-entry-controller"
                ],
                "summary": "Allocate stock from item id",
                "operationId": "allocateStockFromItemIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facilityID",
                        "in": "path",
                        "description": "facilityID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "itemStockExitList",
                        "description": "itemStockExitList",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ItemStockExit"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/blockItemCategory": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Block item category",
                "operationId": "blockItemCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "itemCat",
                        "description": "itemCat",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/M_ItemCategory"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/blockItemForm": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Block item form",
                "operationId": "blockItemFormUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "itemForm",
                        "description": "itemForm",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/M_ItemForm"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/blockItemMaster/{itemmasterid}/{deleteflag}": {
            "get": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Block item master",
                "operationId": "blockItemMasterUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemmasterid",
                        "in": "path",
                        "description": "itemmasterid",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "deleteflag",
                        "in": "path",
                        "description": "deleteflag",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/blockProvider": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Block provider",
                "operationId": "blockProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "providerBlocking",
                        "description": "providerBlocking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/blockProvider1": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Block provider 1",
                "operationId": "blockProvider1UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "providerBlocking",
                        "description": "providerBlocking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/blockProviderByService": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Block provider by service",
                "operationId": "blockProviderByServiceUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "providerServiceBlocking",
                        "description": "providerServiceBlocking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/blockProviderByServiceId": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Block provider by service id",
                "operationId": "blockProviderByServiceIdUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "blockProviderByServiceId",
                        "description": "blockProviderByServiceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/blockProviderByState": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Block provider by state",
                "operationId": "blockProviderByStateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "providerStateBlocking",
                        "description": "providerStateBlocking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/blockRoute": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Block route",
                "operationId": "blockRouteUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "route",
                        "description": "route",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/M_Route"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/blockUser": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Block user",
                "operationId": "blockUserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "blockUser",
                        "description": "blockUser",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/checkCode": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Check code",
                "operationId": "blockRouteUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "value",
                        "description": "value",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CodeChecker"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/checkFacilityTypeCode": {
            "post": {
                "tags": [
                    "facilitytype-controller"
                ],
                "summary": "Check facility type code",
                "operationId": "checkFacilityTypeCodeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteManufacturer",
                        "description": "deleteManufacturer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/checkManufacturerCode": {
            "post": {
                "tags": [
                    "manufacturer-controller"
                ],
                "summary": "Check manufacturer code",
                "operationId": "checkManufacturerCodeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteManufacturer",
                        "description": "deleteManufacturer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/checkPharmacologicalcategoryCode": {
            "post": {
                "tags": [
                    "pharmacological-category-controller"
                ],
                "summary": "Check pharmacological category code",
                "operationId": "checkPharmacologicalcategoryCodeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deletePharmacologicalcategory",
                        "description": "deletePharmacologicalcategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/checkProvider": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get provider name",
                "operationId": "getProviderNameUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getServiceProvider",
                        "description": "getServiceProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/checkStoreCode": {
            "post": {
                "tags": [
                    "store-controller"
                ],
                "summary": "Check store code",
                "operationId": "checkStoreCodeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteManufacturer",
                        "description": "deleteManufacturer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/checkSupplierCode": {
            "post": {
                "tags": [
                    "supplier-master-controller"
                ],
                "summary": "Check supplier code",
                "operationId": "checkSupplierCodeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteSupplier",
                        "description": "deleteSupplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/checkUomCode": {
            "post": {
                "tags": [
                    "uom-controller"
                ],
                "summary": "Check Uom code",
                "operationId": "checkUomCodeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editUom",
                        "description": "editUom",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/completeUserDetails": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Complete user detail",
                "operationId": "completeUserDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "completeUserDetails",
                        "description": "completeUserDetails",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/configItemIssue": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Configure item issue",
                "operationId": "configItemIssueUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "itemIssue",
                        "description": "itemIssue",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/M_ItemCategory"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/configexpiryalert": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Configure expiry alert",
                "operationId": "configexpiryalertUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "itemIssue",
                        "description": "itemIssue",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/M_ItemCategory"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createCalibrationStrip": {
            "post": {
                "tags": [
                    "calibration-controller"
                ],
                "summary": "Create calibration strip",
                "operationId": "createCalibrationStripUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "{\"stripCode\":\"String\",\"expiryDate\":\"Timestamp\",\"providerServiceMapID\":\"Integer\",\"createdBy\":\"String\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createCitMappingwithServiceLines": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Create cit mapping with service lines",
                "operationId": "createCitMappingwithServiceLinesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createCitMappingwithServiceLines",
                        "description": "createCitMappingwithServiceLines",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createDrugStrangth": {
            "post": {
                "tags": [
                    "drug-srangth"
                ],
                "summary": "Create drug strength",
                "operationId": "createDrugStrangthUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createDrugStrangth",
                        "description": "createDrugStrangth",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createDrugtype": {
            "post": {
                "tags": [
                    "drugtype-controller"
                ],
                "summary": "Create manufacturer",
                "operationId": "createManufacturerUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createDrugtype",
                        "description": "createDrugtype",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createItemCategories": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Create item category",
                "operationId": "createItemCategoriesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "item",
                        "description": "item",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/M_ItemCategory"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createItemForms": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Create item form",
                "operationId": "createItemFormsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "item",
                        "description": "item",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/M_ItemForm"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createItemMaster": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Create item master",
                "operationId": "createItemMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "item",
                        "description": "item",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ItemMaster"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createManufacturer": {
            "post": {
                "tags": [
                    "manufacturer-controller"
                ],
                "summary": "Create manufacturer",
                "operationId": "createManufacturerUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createManufacturer",
                        "description": "createManufacturer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createNewUser": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Create new user",
                "operationId": "createNewUserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createNewUser",
                        "description": "createNewUser",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createOrder": {
            "post": {
                "tags": [
                    "care-stream-create-order-controller"
                ],
                "summary": "Create order",
                "operationId": "createOrderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createOrder",
                        "description": "createOrder",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createPharmacologicalcategory": {
            "post": {
                "tags": [
                    "pharmacological-category-controller"
                ],
                "summary": "Create pharmacological category",
                "operationId": "createPharmacologicalcategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createPharmacologicalcategory",
                        "description": "createPharmacologicalcategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createProvider": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create provider",
                "operationId": "createProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createProvider",
                        "description": "createProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createProviderAdmin": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Create provider admin",
                "operationId": "createProviderAdminUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createProviderAdmin",
                        "description": "createProviderAdmin",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createRoutes": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Create route",
                "operationId": "createRoutesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "routes",
                        "description": "routes",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/M_Route"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createStore": {
            "post": {
                "tags": [
                    "store-controller"
                ],
                "summary": "Create store",
                "operationId": "createStoreUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "store",
                        "description": "store",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createSupplier": {
            "post": {
                "tags": [
                    "supplier-master-controller"
                ],
                "summary": "Create supplier",
                "operationId": "createSupplierUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createSupplier",
                        "description": "createSupplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createUSRAgentMapping": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Create USR agent mapping",
                "operationId": "createUSRAgentMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "[{\"agentID\":\"AgentID as a string\", \"agentPassword\":\"Agent password as a String\", \"providerServiceMapID\":\"Integer - Provider service Map ID\", \"cti_CampaignName\":\"String: campaign name as in CTI\", \"createdBy\":\"String: User name\"},...]",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/createUom": {
            "post": {
                "tags": [
                    "uom-controller"
                ],
                "summary": "Create Uom",
                "operationId": "createUomUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createUom",
                        "description": "createUom",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteCalibrationStrip": {
            "post": {
                "tags": [
                    "calibration-controller"
                ],
                "summary": "Delete calibration strip",
                "operationId": "deleteCalibrationStripUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "{\"deleted\":\"Boolean\",\"CalibrationStripID\":\"Integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteDrugStrangth": {
            "post": {
                "tags": [
                    "drug-srangth"
                ],
                "summary": "Delete drug strength",
                "operationId": "deleteDrugStrangthUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteDrugStrangth",
                        "description": "deleteDrugStrangth",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteDrugtype": {
            "post": {
                "tags": [
                    "drugtype-controller"
                ],
                "summary": "Delete manufacturer",
                "operationId": "deleteManufacturerUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteDrugtype",
                        "description": "deleteDrugtype",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteFacility": {
            "post": {
                "tags": [
                    "facilitytype-controller"
                ],
                "summary": "Delete facility",
                "operationId": "deleteFacilityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteFacility",
                        "description": "deleteFacility",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteItemStoreMapping": {
            "post": {
                "tags": [
                    "m-item-facility-mapping-controller"
                ],
                "summary": "Delete item store mapping",
                "operationId": "deleteItemStoreMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "storeID",
                        "description": "storeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/M_itemfacilitymapping"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteItemtoStrore": {
            "post": {
                "tags": [
                    "m-item-facility-mapping-controller"
                ],
                "summary": "Delete item to store",
                "operationId": "deleteItemtoStroreUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteItemtoStrore",
                        "description": "deleteItemtoStrore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteManufacturer": {
            "post": {
                "tags": [
                    "manufacturer-controller"
                ],
                "summary": "Delete manufacturer",
                "operationId": "deleteManufacturerUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteManufacturer",
                        "description": "deleteManufacturer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteMapStore": {
            "post": {
                "tags": [
                    "store-controller"
                ],
                "summary": "Delete map store",
                "operationId": "deleteMapStoreUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "facilitymap",
                        "description": "facilitymap",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/M_facilityMap"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteMappedServiceLinesAndStatetoProvider": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Delete mapped service lines and state to provider",
                "operationId": "deleteMappedServiceLinesAndStatetoProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteMappedServiceLinesAndStatetoProvider",
                        "description": "deleteMappedServiceLinesAndStatetoProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteOrder": {
            "post": {
                "tags": [
                    "care-stream-create-order-controller"
                ],
                "summary": "Delete order",
                "operationId": "deleteOrderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteOrder",
                        "description": "deleteOrder",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deletePharmacologicalcategory": {
            "post": {
                "tags": [
                    "pharmacological-category-controller"
                ],
                "summary": "Delete pharmacological category",
                "operationId": "deletePharmacologicalcategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deletePharmacologicalcategory",
                        "description": "deletePharmacologicalcategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteProviderAdmin": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Delete provider admin",
                "operationId": "deleteProviderAdminUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteProviderAdmin",
                        "description": "deleteProviderAdmin",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteProviderStateAndServiceLines": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Delete provider state and service lines",
                "operationId": "deleteProviderStateAndServiceLinesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteProviderStateAndServiceLines",
                        "description": "deleteProviderStateAndServiceLines",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteQuestionnaire": {
            "post": {
                "tags": [
                    "questionnaire-controller"
                ],
                "summary": "Delete questionnaire",
                "operationId": "deleteQuestionnaireUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteStore": {
            "post": {
                "tags": [
                    "store-controller"
                ],
                "summary": "Delete store",
                "operationId": "deleteStoreUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "facility",
                        "description": "facility",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/M_Facility"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteSupplier": {
            "post": {
                "tags": [
                    "supplier-master-controller"
                ],
                "summary": "Delete supplier",
                "operationId": "deleteSupplierUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteSupplier",
                        "description": "deleteSupplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteUom": {
            "post": {
                "tags": [
                    "uom-controller"
                ],
                "summary": "Delete Uom",
                "operationId": "deleteUomUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editUom",
                        "description": "editUom",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteUserLanguageMapping": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Delete user language mapping",
                "operationId": "UserLanguageMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteUserLanguageMapping",
                        "description": "deleteUserLanguageMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteUserRoleMapping": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Delete user role mapping",
                "operationId": "deleteUserRoleMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deletedUserRoleMapping",
                        "description": "deletedUserRoleMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deleteUserRoleMappingTM": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Delete user role mapping TM",
                "operationId": "deleteUserRoleMappingTMUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deletedUserRoleMapping",
                        "description": "deletedUserRoleMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deletedUserDetails": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Deleted user details",
                "operationId": "deletedUserDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deletedUserDetails",
                        "description": "deletedUserDetails",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deletemappingProviderAdmintoProvider": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete mapping provider admin to provider",
                "operationId": "deleteMappingProviderAdmintoProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteMappingProviderAdmintoProvider",
                        "description": "deleteMappingProviderAdmintoProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/discontinueItemMaster/{itemmasterid}/{deleteflag}": {
            "get": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Discontinue item master",
                "operationId": "discontinueItemMasterUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemmasterid",
                        "in": "path",
                        "description": "itemmasterid",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "deleteflag",
                        "in": "path",
                        "description": "deleteflag",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editDrugtype": {
            "post": {
                "tags": [
                    "drugtype-controller"
                ],
                "summary": "Edit manufacturer",
                "operationId": "editManufacturerUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editDrugtype",
                        "description": "editDrugtype",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editFacility": {
            "post": {
                "tags": [
                    "facilitytype-controller"
                ],
                "summary": "Edit facility",
                "operationId": "editFacilityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editFacility",
                        "description": "editFacility",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editItemCategory": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Edit item category",
                "operationId": "editItemCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "item",
                        "description": "item",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/M_ItemCategory"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editItemForm": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Edit item form",
                "operationId": "editItemFormUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "item",
                        "description": "item",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/M_ItemForm"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editItemMaster": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Edit item master",
                "operationId": "editItemMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "item",
                        "description": "item",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ItemMaster"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editItemtoStrore": {
            "post": {
                "tags": [
                    "m-item-facility-mapping-controller"
                ],
                "summary": "Edit item to store",
                "operationId": "editItemtoStroreUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editItemtoStrore",
                        "description": "editItemtoStrore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editManufacturer": {
            "post": {
                "tags": [
                    "manufacturer-controller"
                ],
                "summary": "Edit manufacturer",
                "operationId": "editManufacturerUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editManufacturer",
                        "description": "editManufacturer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editMappedServiceLinesAndStatetoProvider": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Edit mapped service lines and state to provider",
                "operationId": "editMappedServiceLinesAndStatetoProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editMappedServiceLinesAndStatetoProvider",
                        "description": "editMappedServiceLinesAndStatetoProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editPharmacologicalcategory": {
            "post": {
                "tags": [
                    "pharmacological-category-controller"
                ],
                "summary": "Edit pharmacological category",
                "operationId": "editPharmacologicalcategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editPharmacologicalcategory",
                        "description": "editPharmacologicalcategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editProviderAdmin": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Edit provider admin",
                "operationId": "editProviderAdminUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editProviderAdmin",
                        "description": "editProviderAdmin",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editQuestionnaire": {
            "post": {
                "tags": [
                    "questionnaire-controller"
                ],
                "summary": "Edit questionnaire",
                "operationId": "editQuestionnaireUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editRoute": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Edit route",
                "operationId": "editRouteUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "route",
                        "description": "route",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/M_Route"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editStore": {
            "post": {
                "tags": [
                    "store-controller"
                ],
                "summary": "Edit store",
                "operationId": "editStoreUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "store",
                        "description": "store",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editSupplier": {
            "post": {
                "tags": [
                    "supplier-master-controller"
                ],
                "summary": "Edit supplier",
                "operationId": "editSupplierUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editSupplier",
                        "description": "editSupplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editUom": {
            "post": {
                "tags": [
                    "uom-controller"
                ],
                "summary": "Edit Uom",
                "operationId": "editUomUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editUom",
                        "description": "editUom",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editUserDetails": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Edit user details",
                "operationId": "editUserDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editUserDetails",
                        "description": "editUserDetails",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/editmappingProviderAdmintoProvider": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Edit mapping provider admin to provider",
                "operationId": "editMappingProviderAdmintoProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editMappingProviderAdmintoProvider",
                        "description": "editMappingProviderAdmintoProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetchCalibrationStrips": {
            "post": {
                "tags": [
                    "calibration-controller"
                ],
                "summary": "Fetch calibration strip",
                "operationId": "fetchCalibrationStripsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "{\"providerServiceMapID\":\"Integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/createFetosenseDeviceID": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "To save fetosense device id",
                "operationId": "saveFetosenseDeviceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "[\r\n  {\r\n    \"deviceID\": \"String\",\r\n    \"deviceName\": \"String\",\r\n    \"providerServiceMapID\": Integer,\r\n    \"createdBy\": \"String\"\r\n  }]",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FetosenseDeviceID"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/createFetosenseTestMaster": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Create fetosense test master by provider admin",
                "operationId": "createFetosenseTestMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestOBJ",
                        "description": "requestOBJ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/delete/fetosenseDeviceID": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Delete fetosense device id",
                "operationId": "deleteFetosenseDeviceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "{\r\n        \"VfdID\": \"Integer\",\r\n        \"deviceName\": \"String\",\r\n        \"deviceID\": \"String\",\r\n        \"vanID\": \"Integer\",\r\n        \"parkingPlaceID\": \"Integer\",\r\n        \"vanTypeID\": \"Integer\",\r\n        \"vanName\": \"String\",\r\n        \"providerServiceMapID\": \"Integer\",\r\n        \"deactivated\": \"Boolean\",\r\n        \"deleted\": \"Boolean\",\r\n        \"processed\": \"String\",\r\n        \"createdBy\": \"String\"\",\r\n        \"modifiedBy\": \"String\"\r\n      }",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/delete/vanIDAndFetosenseDeviceIDMapping": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Deactivate van id and fetosense device id mapping ",
                "operationId": "deleteVanIDAndFetosenseDeviceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "{\r\n        \"VfdID\": \"Integer\",\r\n  \"vanID\": \"Integer\",\r\n  \"deactivated\": \"Boolean\", \r\n}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/fetch/fetosenseDeviceID": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Provides the fetosense device id",
                "operationId": "getFetosenseDeviceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "{ 'providerServiceMapID': Integer }",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/fetch/mappingWorklist": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Provides the worklist of van id and fetosense device id",
                "operationId": "getMappedWorklistUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "\r\n{\"parkingPlaceID\" : Integer,\r\n                    \"vanTypeID\" : Integer,\r\n                    \"providerServiceMapID\" : Integer\r\n                  };\r\n",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/fetch/vanIDAndFetosenseDeviceID": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Provides the van id and fetosense device id",
                "operationId": "getVanIDAndDeviceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "\r\n{\"parkingPlaceID\" : Integer,\r\n                    \"vanTypeID\" : Integer,\r\n                    \"providerServiceMapID\" : Integer\r\n                  };\r\n",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/fetchFetosenseTestMaster/{psmID}": {
            "get": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Fetch fetosense tests master for provider-service-map-id",
                "operationId": "fetchFetosenseTestMasterUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "psmID",
                        "in": "path",
                        "description": "psmID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/mapping/vanIDAndDeviceID": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "To save mapping of van id and fetosense device id",
                "operationId": "saveVanIDandDeviceIDMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "\r\n{\r\n      \"spokeID\":this.spokeID,\r\n      \"deviceID\": this.deviceID,\r\n      \"providerServiceMapID\": this.providerServiceMapID,\r\n      \"createdBy\": this.commonDataService.uname\r\n \r\n  }\r\n",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/update/fetosenseDeviceID": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Update device id",
                "operationId": "updateFetosenseDeviceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "{\r\n        \"VfdID\": \"Integer\",\r\n        \"deviceName\": \"String\",\r\n        \"deviceID\": \"String\",\r\n        \"vanID\": \"Integer\",\r\n        \"parkingPlaceID\": \"Integer\",\r\n        \"vanTypeID\": \"Integer\",\r\n        \"vanName\": \"String\",\r\n        \"providerServiceMapID\": \"Integer\",\r\n        \"deactivated\": \"Boolean\",\r\n        \"deleted\": \"Boolean\",\r\n        \"processed\": \"String\",\r\n        \"createdBy\": \"String\"\",\r\n        \"modifiedBy\": \"String\"\r\n      }",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/update/vanIDAndFetosenseDeviceIDMapping": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Update van id and fetosense device id mapping",
                "operationId": "updateMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "{\r\n        \"VfdID\": \"Integer\",\r\n        \"deviceName\": \"String\",\r\n        \"deviceID\": \"String\",\r\n        \"vanID\": \"Integer\",\r\n        \"parkingPlaceID\": \"Integer\",\r\n        \"vanTypeID\": \"Integer\",\r\n        \"vanName\": \"String\",\r\n        \"providerServiceMapID\": \"Integer\",\r\n        \"deactivated\": \"Boolean\",\r\n        \"deleted\": \"Boolean\",\r\n        \"processed\": \"String\",\r\n        \"createdBy\": \"String\"\",\r\n        \"modifiedBy\": \"String\"\r\n      }",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/updateFetosenseTestMaster": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Update fetosense tests master for a particular procedure",
                "operationId": "updateProcedureMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestOBJ",
                        "description": "{}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/fetosense/updateFetosenseTestMasterStatus": {
            "post": {
                "tags": [
                    "fetosense-controller"
                ],
                "summary": "Update procedure status for enable or disable",
                "operationId": "updateProcedureStatusUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestOBJ",
                        "description": "{}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getAgentID": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get agent id",
                "operationId": "getAgentIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "addEmployee",
                        "description": "addEmployee",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getAllAgentIds": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get all agent ids",
                "operationId": "getAllAgentIdsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "{\"providerServiceMapID\":\"Integer - Provider Service Map ID\", \"cti_CampaignName\":\"Optional String - Campaign Name\", \"isAvailable\":\"Optional boolean - availability status\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getAllFacilityMappedData": {
            "post": {
                "tags": [
                    "m-item-facility-mapping-controller"
                ],
                "summary": "Get all facility mapped data",
                "operationId": "getAllFacilityMappedDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getAllFacilityMappedData",
                        "description": "getAllFacilityMappedData",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getAllProvider": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get all provider name",
                "operationId": "getAllProviderNameUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getServiceProvider",
                        "description": "getServiceProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getAllStore/{providerServiceMapID}": {
            "post": {
                "tags": [
                    "store-controller"
                ],
                "summary": "Get all store",
                "operationId": "getAllStoreUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "providerServiceMapID",
                        "in": "path",
                        "description": "providerServiceMapID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getAvailableAgentIds": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get available agent ids",
                "operationId": "getAvailableAgentIdsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "{\"providerServiceMapID\":\"Integer - Provider Service Map ID\", \"cti_CampaignName\":\"String - Campaign Name\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getAvailableCampaigns": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get available campaigns",
                "operationId": "getAvailableCampaignsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "{\"providerServiceMapID\":\"Integer: provider service map ID\", \"serviceName\":\"Optional - String - service name\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getCommunity": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get community",
                "operationId": "getCommunityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getCommunity",
                        "description": "getCommunity",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getDrugStrangth": {
            "post": {
                "tags": [
                    "drug-srangth"
                ],
                "summary": "Get drug strength",
                "operationId": "getDrugStrangthUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getDrugStrangth",
                        "description": "getDrugStrangth",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getDrugtype": {
            "post": {
                "tags": [
                    "drugtype-controller"
                ],
                "summary": "Get manufacturer",
                "operationId": "getManufacturerUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getDrugtype",
                        "description": "getDrugtype",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getEmailConfigs": {
            "post": {
                "tags": [
                    "email-config-controller"
                ],
                "summary": "Get email configuration",
                "operationId": "getEmailConfigsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "authEmailRequest",
                        "description": "authEmailRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthEmailRequest"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getFacility": {
            "post": {
                "tags": [
                    "facilitytype-controller"
                ],
                "summary": "Get facility",
                "operationId": "getFacilityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getFacility",
                        "description": "getFacility",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getItem": {
            "post": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Get item",
                "operationId": "getItemUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getItem",
                        "description": "getItem",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getItemBatchForStoreID": {
            "post": {
                "tags": [
                    "stock-entry-controller"
                ],
                "summary": "Get item batch for store id",
                "operationId": "getItemBatchForStoreIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "itemStockEntry",
                        "description": "itemStockEntry",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ItemStockEntry"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getItemCategory/{providerservicemapID}/{bool}": {
            "get": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Get item category",
                "operationId": "getItemCategoryUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "providerservicemapID",
                        "in": "path",
                        "description": "providerservicemapID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "bool",
                        "in": "path",
                        "description": "bool",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getItemForm/{providerservicemapID}": {
            "get": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Get item form service map id",
                "operationId": "getItemFormUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "providerservicemapID",
                        "in": "path",
                        "description": "providerservicemapID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getItemFromStoreID/{storeID}": {
            "post": {
                "tags": [
                    "m-item-facility-mapping-controller"
                ],
                "summary": "Get item from store id",
                "operationId": "getItemFromStoreIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "storeID",
                        "in": "path",
                        "description": "storeID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getItemMaster/{providerservicemapID}": {
            "get": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Get item master",
                "operationId": "getItemMasterUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "providerservicemapID",
                        "in": "path",
                        "description": "providerservicemapID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getItemRoute/{providerservicemapID}": {
            "get": {
                "tags": [
                    "item-controller"
                ],
                "summary": "Get item route",
                "operationId": "getItemRouteUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "providerservicemapID",
                        "in": "path",
                        "description": "providerservicemapID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getMainFacility": {
            "post": {
                "tags": [
                    "store-controller"
                ],
                "summary": "Get main facility",
                "operationId": "getMainFacilityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getMainFacility",
                        "description": "getMainFacility",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getManufacturer": {
            "post": {
                "tags": [
                    "manufacturer-controller"
                ],
                "summary": "Get manufacturer",
                "operationId": "getManufacturerUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getManufacturer",
                        "description": "getManufacturer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getMapStore": {
            "post": {
                "tags": [
                    "store-controller"
                ],
                "summary": "Get map store",
                "operationId": "getMapStoreUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "facilitymap",
                        "description": "facilitymap",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/V_FetchFacility"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getMappedServiceLinesAndStatetoProvider": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Get mapped service lines and state to provider",
                "operationId": "getMappedServiceLinesAndStatetoProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getMappedServiceLinesAndStatetoProvider",
                        "description": "getMappedServiceLinesAndStatetoProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getNodalEmailConfigs": {
            "post": {
                "tags": [
                    "nodal-config-controller"
                ],
                "summary": "Get nodal email configs",
                "operationId": "getNodalEmailConfigsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "authEmailRequest",
                        "description": "authEmailRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NodalEmailRequest"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getPharmacologicalcategory": {
            "post": {
                "tags": [
                    "pharmacological-category-controller"
                ],
                "summary": "Get pharmacological category",
                "operationId": "getPharmacologicalcategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createPharmacologicalcategory",
                        "description": "createPharmacologicalcategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getProviderAdmin": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get provider admin",
                "operationId": "getProviderAdminUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getProviderAdmin",
                        "description": "getProviderAdmin",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getProviderStatus": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Get provider status",
                "operationId": "getProviderStatusUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getProviderStatus",
                        "description": "getProviderStatus",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getProviderStatus1": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Get provider status 1",
                "operationId": "getProviderStatus1UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getProviderStatus",
                        "description": "getProviderStatus",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getProviderStatusByProviderAndServiceId": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Get provider status by provider and service id",
                "operationId": "getProviderStatusByProviderAndServiceIdUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getProviderStatusByProviderAndServiceId",
                        "description": "getProviderStatusByProviderAndServiceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getProviderStatusByService": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Get provider status by service",
                "operationId": "getProviderStatusByServiceUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "providerServiceBlocking",
                        "description": "providerServiceBlocking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getProviderStatusByState": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Get provider status by state",
                "operationId": "getProviderStatusByStateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "providerStateBlocking",
                        "description": "providerStateBlocking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getQuestionnaireList": {
            "post": {
                "tags": [
                    "questionnaire-controller"
                ],
                "summary": "Get questionnaire list",
                "operationId": "getQuestionnaireListUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "{\"providerServiceMapID\":\"Integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getReligion": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get religion",
                "operationId": "getReligionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getReligion",
                        "description": "getReligion",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getServiceLinesUsingProvider": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Get service liens using provider",
                "operationId": "getServiceLiensUsingProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getServiceLiensUsingProvider",
                        "description": "getServiceLiensUsingProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getServiceProviderid": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get service provider id",
                "operationId": "getProviderIdUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getServiceProviderId",
                        "description": "getServiceProviderId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getServiceline": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get service line",
                "operationId": "getServiceLineUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "serviceline",
                        "description": "serviceline",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getStatus": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Get status",
                "operationId": "getStatusUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getStatus",
                        "description": "getStatus",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getSubStoreitem": {
            "post": {
                "tags": [
                    "m-item-facility-mapping-controller"
                ],
                "summary": "Get sub store item",
                "operationId": "getSubStroreitemUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteItemtoStrore",
                        "description": "deleteItemtoStrore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getSupplier": {
            "post": {
                "tags": [
                    "supplier-master-controller"
                ],
                "summary": "Get supplier",
                "operationId": "getSupplierUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getSupplier",
                        "description": "getSupplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getUom": {
            "post": {
                "tags": [
                    "uom-controller"
                ],
                "summary": "Get Uom",
                "operationId": "getUomUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getUom",
                        "description": "getUom",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getUserMappedLanguage": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get user mapped language",
                "operationId": "getUserMappedLanguageUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getUserMappedLanguage",
                        "description": "getUserMappedLanguage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getUserRoleMapped": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get user role mapped",
                "operationId": "getUserRoleMappedUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getUserRoleMapped",
                        "description": "getUserRoleMapped",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getUserRoleTM": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get user role TM",
                "operationId": "getUserRoleTMUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getCommunity",
                        "description": "getCommunity",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getmappingProviderAdmintoProvider": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get mapping provider admin to provider",
                "operationId": "getMappingProviderAdmintoProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getMappingProviderAdmintoProvider",
                        "description": "getMappingProviderAdmintoProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/getsubFacility": {
            "post": {
                "tags": [
                    "store-controller"
                ],
                "summary": "Get sub facility",
                "operationId": "getsubFacilityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getMainFacility",
                        "description": "getMainFacility",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iotController/getIOTComponent": {
            "post": {
                "tags": [
                    "iot-controller"
                ],
                "summary": "Get IOT component",
                "operationId": "getIOTComponentUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/iotController/getIOTProcedure": {
            "post": {
                "tags": [
                    "iot-controller"
                ],
                "summary": "Get IOT procedure",
                "operationId": "getIOTProcedureUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/createComponentMaster": {
            "post": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Create component master by provider admin",
                "operationId": "createComponentMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestOBJ",
                        "description": "{}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/createProcedureComponentMapping": {
            "post": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Create procedure - component mapping by provider admin",
                "operationId": "createProcedureComponentMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestOBJ",
                        "description": "{}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/createProcedureMaster": {
            "post": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Create procedure master by provider admin",
                "operationId": "createProcedureMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestOBJ",
                        "description": "{}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/fetchComponentDetailsForComponentID/{cID}": {
            "get": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Fetch  component details  for particular component id",
                "operationId": "fetchComponentDetailsForComponentIDUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "cID",
                        "in": "path",
                        "description": "cID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/fetchComponentMaster/{psmID}": {
            "get": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Fetch component master for provider-service-map-id",
                "operationId": "fetchComponentMasterUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "psmID",
                        "in": "path",
                        "description": "psmID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/fetchComponentMasterDelFalse/{psmID}": {
            "get": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Fetch component master for provider-service-map-id and deleted false",
                "operationId": "fetchComponentMasterDelFalseUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "psmID",
                        "in": "path",
                        "description": "psmID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/fetchProcCompMappingForSingleProcedure/{pID}": {
            "get": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Fetch procedure component mapping list for particular procedure id",
                "operationId": "fetchProcCompMappingForSingleProcedureUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "pID",
                        "in": "path",
                        "description": "pID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/fetchProcedureMaster/{psmID}": {
            "get": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Fetch procedure master for provider-service-map-id",
                "operationId": "fetchProcedureMasterUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "psmID",
                        "in": "path",
                        "description": "psmID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/fetchProcedureMasterDelFalse/{psmID}": {
            "get": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Fetch procedure master for provider-service-map-id and deleted is false",
                "operationId": "fetchProcedureMasterDelFalseUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "psmID",
                        "in": "path",
                        "description": "psmID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/fetchprocCompMappingDelFalse/{psmID}": {
            "get": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Fetch procedure component mapping list for provider-service-map-id and deleted false",
                "operationId": "fetchProcCompMappingDelFalseUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "psmID",
                        "in": "path",
                        "description": "psmID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/updateComponentMaster": {
            "post": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Update component master for a particular Component",
                "operationId": "updateComponentMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestOBJ",
                        "description": "{}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/updateComponentStatus": {
            "post": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Update component status for enable or disable",
                "operationId": "updateComponentStatusUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestOBJ",
                        "description": "{}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/updateProcedureMaster": {
            "post": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Update procedure master for a particular procedure",
                "operationId": "updateProcedureMasterUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestOBJ",
                        "description": "{}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/labModule/updateProcedureStatus": {
            "post": {
                "tags": [
                    "lab-module-controller"
                ],
                "summary": "Update procedure status for enable or disable",
                "operationId": "updateProcedureStatusUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestOBJ",
                        "description": "{}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/AddEmployee": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Add employee",
                "operationId": "addEmployeeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "addEmployee",
                        "description": "addEmployee",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/AllGender": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get all gender",
                "operationId": "getAllGenderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getAllGender",
                        "description": "getAllGender",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/AllTitle": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "All title",
                "operationId": "getAllTitleUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getAllTitle",
                        "description": "getAllTitle",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/FindEmployeeByName": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Find employee by name",
                "operationId": "FindEmployeeNameUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "FindEmployee",
                        "description": "FindEmployee",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/FindEmployeeDetails": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Find employee details",
                "operationId": "checkingEmpDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "FindEmployeeDetails",
                        "description": "FindEmployeeDetails",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/FindEmployeeDetailsByUserName": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Find employee details by user name",
                "operationId": "FindEmployeeDetailsByUserNameUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "FindEmployeeDetailsByUserName",
                        "description": "FindEmployeeDetailsByUserName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/FindSubSerive": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Find sub service name by map id",
                "operationId": "FindSubSeriveNameByMapIdUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "FindSubSeriveName",
                        "description": "FindSubSeriveName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/Qualification": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Qualification",
                "operationId": "QualificationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Qualification",
                        "description": "Qualification",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/ResetUserPassword": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Reset user password",
                "operationId": "ResetUserPasswordUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "ResetUserPassword",
                        "description": "ResetUserPassword",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployee": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee",
                "operationId": "searchEmployeeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee",
                        "description": "searchEmployee",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployee1": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee 1",
                "operationId": "searchEmployee1UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee1",
                        "description": "searchEmployee1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployee2": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee 2",
                "operationId": "searchEmployee2UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee1",
                        "description": "searchEmployee1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployee3": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee 3",
                "operationId": "searchEmployee3UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee1",
                        "description": "searchEmployee1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployee4": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee 4",
                "operationId": "searchEmployee4UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee1",
                        "description": "searchEmployee1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployee5": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee 5",
                "operationId": "searchEmployee5UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee1",
                        "description": "searchEmployee1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployee6": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee 6",
                "operationId": "searchEmployee6UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee1",
                        "description": "searchEmployee1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployee7": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee 7",
                "operationId": "searchEmployee7UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee1",
                        "description": "searchEmployee1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployee8": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee 8",
                "operationId": "searchEmployee8UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee1",
                        "description": "searchEmployee1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployee9": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee 9",
                "operationId": "searchEmployee9UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee1",
                        "description": "searchEmployee1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/SearchEmployeeFilter": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search employee filter",
                "operationId": "searchEmployee10UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchEmployee1",
                        "description": "searchEmployee1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createCalltypedata": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create call type data",
                "operationId": "createCalltypeDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createCalltypedata",
                        "description": "createCalltypedata",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createCategory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create category",
                "operationId": "createCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createCategory",
                        "description": "createCategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createFeedbackNatureType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create feedback nature type",
                "operationId": "createFeedbackNatureTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createFeedbackNatureType",
                        "description": "createFeedbackNatureType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createInstituteDirectory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create institute directory",
                "operationId": "createInstuteDirectotyUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createInstuteDirectory",
                        "description": "createInstuteDirectory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createInstituteType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create institute type",
                "operationId": "createInstuteTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createInstuteType",
                        "description": "createInstuteType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createInstituteTypeByDist": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create institute type by district",
                "operationId": "createInstuteTypeByDistUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createInstuteType",
                        "description": "createInstuteType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createInstitutionByFile": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create institution by file",
                "operationId": "createInstitutionByFileUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getInstitutionDetails",
                        "description": "getInstitutionDetails",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createInstutesubDirectory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create institute sub directory",
                "operationId": "createInstuteSubDirectoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createInstuteSubDirectory",
                        "description": "createInstuteSubDirectory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createInstutesubDirectoryMapping": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create institute sub directory mapping",
                "operationId": "createInstuteSubDirectoryMapingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createInstuteSubDirectoryMapping",
                        "description": "createInstuteSubDirectoryMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createInstution": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create institution",
                "operationId": "createInstutionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createInstution",
                        "description": "createInstution",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createInstutionByVillage": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create institution by village",
                "operationId": "createInstutionByVillageUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createInstution",
                        "description": "createInstution",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/createSubCategory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create sub category",
                "operationId": "createSubCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createSubCategory",
                        "description": "createSubCategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteCalltype": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete call type",
                "operationId": "deleteCallTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteCalltype",
                        "description": "deleteCalltype",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteCategory1": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete category",
                "operationId": "deleteCategory1UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteCategory1",
                        "description": "deleteCategory1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteEmployee": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Delete employee",
                "operationId": "deleteEmployeeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteEmployee",
                        "description": "deleteEmployee",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteEmployeeRole": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Delete employer role",
                "operationId": "deleteEmployeeRoleUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteEmployeeRole",
                        "description": "deleteEmployeeRole",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteFeature": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Delete feature",
                "operationId": "deleteFeatureUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "mRole1",
                        "description": "mRole1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteFeedbackNatureType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete feedback nature type",
                "operationId": "deleteFeedbackNatureTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteFeedbackNatureType",
                        "description": "deleteFeedbackNatureType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteFeedbackType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete feedback type",
                "operationId": "deleteFeedbackTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteFeedbackType",
                        "description": "deleteFeedbackType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteInstituteDirectory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete institute directory",
                "operationId": "deleteInstuteDirectoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteInstuteDirectory",
                        "description": "deleteInstuteDirectory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteInstituteType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete institute type",
                "operationId": "deleteInstuteTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteInstuteType",
                        "description": "deleteInstuteType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteInstutesubDirectory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete institute sub directory",
                "operationId": "deleteInstuteSubDirectoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteInstuteSubDirectory",
                        "description": "deleteInstuteSubDirectory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteInstutesubDirectoryMapping": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete institute sub directory mapping",
                "operationId": "deleteInstuteSubDirectoryMapingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteInstuteSubDirectoryMapping",
                        "description": "deleteInstuteSubDirectoryMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteInstution": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete institution",
                "operationId": "deleteInstutionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteInstution",
                        "description": "deleteInstution",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteServerity": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete severity",
                "operationId": "deleteServerityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteServerity",
                        "description": "deleteServerity",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteSubCategory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete sub category",
                "operationId": "deleteSubCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteCategory",
                        "description": "deleteCategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/deleteSubSerive": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Delete sub service",
                "operationId": "deleteSubSeriveUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateSubSeriveName",
                        "description": "updateSubSeriveName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/editEmployee": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Edit employee",
                "operationId": "editEmployeeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editEmployee",
                        "description": "editEmployee",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/editFeedbackNatureType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Edit feedback nature type",
                "operationId": "editFeedbackNatureTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editFeedbackNatureType",
                        "description": "editFeedbackNatureType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/editFeedbackType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Edit feedback type",
                "operationId": "editFeedbackTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editFeedbackType",
                        "description": "editFeedbackType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/editInstituteDirectory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Edit institute directory",
                "operationId": "editInstuteDirectoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editInstuteDirectory",
                        "description": "editInstuteDirectory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/editInstituteType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Edit institute type",
                "operationId": "editInstuteTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editInstuteType",
                        "description": "editInstuteType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/editInstutesubDirectory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Edit institute sub directory",
                "operationId": "editInstuteSubDirectoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editInstuteSubDirectory",
                        "description": "editInstuteSubDirectory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/editInstution": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Edit institution",
                "operationId": "editInstutionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editInstution",
                        "description": "editInstution",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/editServerity": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Edit severity",
                "operationId": "editServerityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteServerity",
                        "description": "deleteServerity",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getAllRole": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get all role",
                "operationId": "getAllRoleUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getAllRole",
                        "description": "getAllRole",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getCalltypedata": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get call type data",
                "operationId": "getCallTypeDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "saveCalltypeData",
                        "description": "saveCalltypeData",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getCategory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get category",
                "operationId": "getCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getCategory",
                        "description": "getCategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getCategoryByMapID": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get category by map id",
                "operationId": "getAllCategoryPsmMapidUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getmapedCategorytoFeedbackNature",
                        "description": "getmapedCategorytoFeedbackNature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getCategoryBySubServiceID": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get category by sub service id",
                "operationId": "getCategoryBySubServiceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getCategoryBySubServiceID",
                        "description": "getCategoryBySubServiceID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getDesignation": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get designation",
                "operationId": "getDesignationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getDesignation",
                        "description": "getDesignation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getDrugData": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get drug data",
                "operationId": "getDrugDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "drugMaster",
                        "description": "{\"drugID\":\"integer\", \"serviceProviderID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getDrugGroupMappings": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get drug group mappings",
                "operationId": "getDrugGroupMappingsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "drugMaster",
                        "description": "drugMaster",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getDrugGroups": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get drug groups",
                "operationId": "getDrugGroupsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "drugMaster",
                        "description": "{\"drugGroupID\":\"integer\", \"serviceProviderID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getEmployeeByDesignation": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get employee by designation",
                "operationId": "getEmployeeByDesignationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getDesignation",
                        "description": "getDesignation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getFeedbackNatureType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get feedback nature type",
                "operationId": "getFeedbackNatureTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getFeedbackNatureType",
                        "description": "getFeedbackNatureType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getFeedbackType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get feedback type",
                "operationId": "getFeedbackTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getFeedbackType",
                        "description": "getFeedbackType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getInstituteDirectory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get institute directory",
                "operationId": "getInstuteDirectoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getInstuteDirectory",
                        "description": "getInstuteDirectory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getInstituteType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get institute type",
                "operationId": "getInstuteTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getInstuteType",
                        "description": "getInstuteType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getInstituteTypeByDist": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get institute type by district",
                "operationId": "getInstituteTypeByDistUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getInstuteType",
                        "description": "getInstuteType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getInstutesubDirectory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get institute sub directory",
                "operationId": "getInstuteSubDirectoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getInstuteSubDirectory",
                        "description": "getInstuteSubDirectory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getInstutesubDirectoryMapping": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get institute sub directory mapping",
                "operationId": "getInstuteSubDirectoryMapingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getInstuteSubDirectoryMapping",
                        "description": "getInstuteSubDirectoryMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getInstution": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get institution",
                "operationId": "getInstutionUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getInstution",
                        "description": "getInstution",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getInstutionByVillage": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get institution by village",
                "operationId": "getInstutionByVillageUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getInstution",
                        "description": "getInstution",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getServerity": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get severity",
                "operationId": "getServerityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getServerity",
                        "description": "getServerity",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getSubCategory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get sub category",
                "operationId": "getSubCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getSubCategory",
                        "description": "getSubCategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getSubSerive": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get sub service name",
                "operationId": "getSubSeriveNameUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getSubSeriveName",
                        "description": "getSubSeriveName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getmapedCategorytoFeedbackNatureWithFeedbackNatureID": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get mapped category to feedback nature with category id and feedback nature id",
                "operationId": "getmapedCategorytoFeedbackNatureWithCatIDandFeedbackNatureIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getmapedCategorytoFeedbackNature",
                        "description": "getmapedCategorytoFeedbackNature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getsubCategory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get sub category",
                "operationId": "getsubCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getsubCategory1",
                        "description": "getsubCategory1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/getunmappedCategoryforFeedbackNature": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Get unmapped category for feedback nature",
                "operationId": "getunmappedCategoryforFeedbackNatureUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getmapedCategorytoFeedbackNature",
                        "description": "getmapedCategorytoFeedbackNature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/addLocation": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Get all role",
                "operationId": "getAllRoleUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/deleteLocation": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Delete location",
                "operationId": "deleteLocationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deletelocation",
                        "description": "deletelocation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/editLocation": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Get edit location",
                "operationId": "geteditLocationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editLocation",
                        "description": "editLocation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/findDistrict": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Get all district",
                "operationId": "getAllDistrictUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "mDistrict1",
                        "description": "mDistrict1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/getAlllocation": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Get all location",
                "operationId": "getAlllocationUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getAlllocation",
                        "description": "getAlllocation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/getAlllocation1": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "get all role 2",
                "operationId": "getAllRole2UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/getAlllocation22": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Get all location",
                "operationId": "getAlllocationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getAlllocation",
                        "description": "getAlllocation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/getAlllocationNew": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Get all new location",
                "operationId": "getAlllocationNewUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getAlllocation",
                        "description": "getAlllocation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/getLocationByServiceID": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Get location by service id",
                "operationId": "getLocationByServiceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getLocationByServiceID",
                        "description": "getLocationByServiceID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/getLocationByStateId": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Get location by state id",
                "operationId": "getLocationByStateIdUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getLocationByStateId",
                        "description": "getLocationByStateId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/getOfficeNameByMapId": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Get office name by map id",
                "operationId": "getOfficeNameByMapIdUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getOfficeNameByMapId",
                        "description": "getOfficeNameByMapId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/getStatesByServiceID": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Get state by service id",
                "operationId": "getStatesByServiceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/service": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Get service",
                "operationId": "getServiceUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/location/state": {
            "post": {
                "tags": [
                    "location-master-controller"
                ],
                "summary": "Search role",
                "operationId": "searchRoleUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/mapCategorytoFeedbackNature": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Map category to feedback nature",
                "operationId": "mapCategorytoFeedbackNatureUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "mapCategorytoFeedbackNature",
                        "description": "mapCategorytoFeedbackNature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/mapDrugWithGroup": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Map drug with drug group",
                "operationId": "mapDrugWithGroupUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "DrugMasterTO",
                        "description": "{\"drugId\":\"integer\", \"drugName\":\"string\", \"drugGroupID\":\"integer\", \"drugGroupName\":\"string\", \"remarks\":\"integer\",  \"processed\":\"charactor\", \"providerServiceMapID\":\"integer\", \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/addRole": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Save role",
                "operationId": "saveRoleUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "mRole1",
                        "description": "mRole1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/configWrap": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Configure wrap up time",
                "operationId": "configWrapUptimeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "role",
                        "description": "role",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/M_Role"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/deleteRole": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Delete role",
                "operationId": "deleteRoleUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "mRole1",
                        "description": "mRole1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/editRole": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Edit role",
                "operationId": "editRoleUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "mRole1",
                        "description": "mRole1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/search": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Search role",
                "operationId": "getAllRoleUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/search/active": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Get all active role",
                "operationId": "getAllRoleActiveUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/search1": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Get role data",
                "operationId": "getAllRole1UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/searchNew": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Search role",
                "operationId": "getAllRoleNewUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/searchV1": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Get all roles",
                "operationId": "getAllRolesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/service": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Get service by service provider id and state id",
                "operationId": "getServiceUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/serviceNew": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Get service by provider id",
                "operationId": "getServiceByProviderIdUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/state": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Search role",
                "operationId": "searchRoleUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/role/stateNew": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Get state by provider id and service id",
                "operationId": "getStateByProviderIdAndServiceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/saveCalltypedata": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Save call type data",
                "operationId": "saveCallTypeDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "saveCalltypeData",
                        "description": "saveCalltypeData",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/saveCategory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Save category",
                "operationId": "saveCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "saveCategory",
                        "description": "saveCategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/saveCategoryUseExist": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Save category user exist",
                "operationId": "saveCategoryUseExistUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "saveCategoryUseExist",
                        "description": "saveCategoryUseExist",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/saveDrug": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Store drug detail",
                "operationId": "saveDrugUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "DrugMasterTO",
                        "description": "{\"drugName\":\"string\", \"drugDesc\":\"string\", \"remarks\":\"integer\", \"deleted\":\"boolean\", \"processed\":\"charactor\", \"providerServiceMapID\":\"integer\", \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/saveDrugGroup": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Stores drug group ",
                "operationId": "saveDrugGroupUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "drugMaster",
                        "description": "{\"drugGroup\":\"string\", \"drugGroupDesc\":\"string\", \"providerServiceMapID\":\"integer\", \"deleted\":\"boolean\", \"processed\":\"charactor\", \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/saveFeedbackType": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Save feedback type",
                "operationId": "saveFeedbackTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "saveFeedbackType",
                        "description": "saveFeedbackType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/saveServerity": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Save severity",
                "operationId": "saveServerityUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "saveServerity",
                        "description": "saveServerity",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/saveSubserviceData": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Save sub service data",
                "operationId": "saveSubServiceDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "SubserviceData",
                        "description": "SubserviceData",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/searchFeature": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Search feature",
                "operationId": "searchFeatureUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Feature",
                        "description": "Feature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/updateCalltypedata": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update call type data",
                "operationId": "updateCallTypeDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateCalltypeData",
                        "description": "updateCalltypeData",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/updateCategory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update category",
                "operationId": "updateCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteCategory1",
                        "description": "deleteCategory1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/updateCategorytoFeedbackNature": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update category to feedback nature",
                "operationId": "updateCategorytoFeedbackNatureUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateCategorytoFeedbackNature",
                        "description": "updateCategorytoFeedbackNature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/updateDrugGroup": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update drug group",
                "operationId": "updateDrugGroupUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateDrugGroup",
                        "description": "updateDrugGroup",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/updateDrugMapping": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update drug mapping",
                "operationId": "updateDrugMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateDrugData",
                        "description": "updateDrugData",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/updateDrugMaster": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update drug master",
                "operationId": "updateDrugMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateDrugData",
                        "description": "updateDrugData",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/updateDrugStatus": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update drug status",
                "operationId": "updateDrugStatusUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateDrugStatus",
                        "description": "updateDrugStatus",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/updateEmployeeRole": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Update employer role",
                "operationId": "updateEmployeeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateEmployee",
                        "description": "updateEmployee",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/updateSubCategory": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update sub category",
                "operationId": "updateSubCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateCategory",
                        "description": "updateCategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/m/updateSubSerive": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update sub service",
                "operationId": "updateSubSeriveUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateSubSeriveName",
                        "description": "updateSubSeriveName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mapExterafeature": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Edit role feature",
                "operationId": "editRolefeatureUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "editRolefeature",
                        "description": "editRolefeature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mapItemtoStrore": {
            "post": {
                "tags": [
                    "m-item-facility-mapping-controller"
                ],
                "summary": "Map item to store",
                "operationId": "mapItemtoStroreUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "mapItemtoStrore",
                        "description": "mapItemtoStrore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mapServiceLinesAndStatetoProvider": {
            "post": {
                "tags": [
                    "blocking-controller"
                ],
                "summary": "Map provider and service lines",
                "operationId": "mapProviderAndServiceLinesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "mapProviderAndServiceLines",
                        "description": "mapProviderAndServiceLines",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mapStore": {
            "post": {
                "tags": [
                    "store-controller"
                ],
                "summary": "Map store",
                "operationId": "mapStoreUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "facilitymap",
                        "description": "facilitymap",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/M_facilityMap"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mapping/delete/vanSpokeMapping": {
            "post": {
                "tags": [
                    "van-spoke-mapping-controller"
                ],
                "summary": "Delete van and spoke mapping",
                "operationId": "deleteVanSpokeMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "requestObj",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mapping/get/vanSpokeMapping": {
            "post": {
                "tags": [
                    "van-spoke-mapping-controller"
                ],
                "summary": "Get van and spoke mapping",
                "operationId": "getVanSpokeMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "requestObj",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mapping/save/vanSpokeMapping": {
            "post": {
                "tags": [
                    "van-spoke-mapping-controller"
                ],
                "summary": "Save van and spoke mapping",
                "operationId": "saveBenNCDCareNurseDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "requestObj",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mappingProviderAdmintoProvider": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Mapping provider admin to provider",
                "operationId": "mappingProviderAdmintoProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "mappingProviderAdmintoProvider",
                        "description": "mappingProviderAdmintoProvider",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/create/parkingPlaces": {
            "post": {
                "tags": [
                    "parking-place-controller"
                ],
                "summary": "Stores parking place details",
                "operationId": "saveParkingPlaceUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlaceMaster",
                        "description": "{\"parkingPlaceName\":\"string\", \"parkingPlaceDesc\":\"string\", \"providerServiceMapID\":\"integer\", \"areaHQAddress\":\"string\", \"countryID\":\"integer\", \"stateID\":\"integer\", \"districtID\":\"integer\", \"districtBlockID\":\"integer\", \"districtBranchID\":\"integer\",  \"createdBy\":\"string\", \"deleted\":\"boolean\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/delete/mappedvan": {
            "post": {
                "tags": [
                    "user-parking-place-map-controller"
                ],
                "summary": "Delete mapped vans for user",
                "operationId": "deletemappedvanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userpvanmapID",
                        "description": "userpvanmapID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/delete/userParkingPlaces1": {
            "post": {
                "tags": [
                    "user-parking-place-map-controller"
                ],
                "summary": "Delete user parking places",
                "operationId": "deleteuserParkingPlacesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userParkingPlaces",
                        "description": "{\"userID\":\"integer\", \"parkingPlaceID\":\"integer\", \"providerServiceMapID\":\"integer\", \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/edit/userParkingPlaces1": {
            "post": {
                "tags": [
                    "user-parking-place-map-controller"
                ],
                "summary": "Edit user parking places",
                "operationId": "edituserParkingPlacesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userParkingPlaces",
                        "description": "{\"userID\":\"integer\", \"parkingPlaceID\":\"integer\", \"providerServiceMapID\":\"integer\", \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/get/mappedvan/{userppID}": {
            "post": {
                "tags": [
                    "user-parking-place-map-controller"
                ],
                "summary": "Fetch mapped vans for user PP id",
                "operationId": "mappedvanUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "userppID",
                        "in": "path",
                        "description": "userppID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/get/parkingPlaces": {
            "post": {
                "tags": [
                    "parking-place-controller"
                ],
                "summary": "Get parking place details",
                "operationId": "getParkingPlacesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlaceMaster",
                        "description": "{\"stateID\":\"integer\", \"districtID\":\"integer\", \"serviceProviderID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/get/parkingPlacesbyzoneid": {
            "post": {
                "tags": [
                    "parking-place-controller"
                ],
                "summary": "Get parking place details by zone id",
                "operationId": "getparkingPlacesbyzoneidUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlaceMaster",
                        "description": "{\"zoneID\":\"integer\", \"providerServiceMapID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/get/unmappeduser": {
            "post": {
                "tags": [
                    "user-parking-place-map-controller"
                ],
                "summary": "Fetch un-mapped users",
                "operationId": "unmappeduserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userParkingPlaces",
                        "description": "{ \"providerServiceMapID\":\"integer\",\"designationID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/get/userParkingPlaces": {
            "post": {
                "tags": [
                    "user-parking-place-map-controller"
                ],
                "summary": "Get user parking places",
                "operationId": "getuserParkingPlacesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userParkingPlaces",
                        "description": "{\"stateID\":\"integer\", \"districtID\":\"integer\", \"parkingPlaceID\":\"integer\", \"serviceProviderID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/get/userParkingPlaces1": {
            "post": {
                "tags": [
                    "user-parking-place-map-controller"
                ],
                "summary": "Get user parking places designation",
                "operationId": "getuserParkingPlacesDesiganationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userParkingPlaces",
                        "description": "{\"stateID\":\"integer\", \"districtID\":\"integer\", \"parkingPlaceID\":\"integer\", \"serviceProviderID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/getParkingPlaces": {
            "post": {
                "tags": [
                    "parking-place-controller"
                ],
                "summary": "Get parking place details",
                "operationId": "getParkingPlacesProviderserviceMapUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlaceMaster",
                        "description": "{ \"providerServiceMapID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/getSubDistrictByParkingPlaceID": {
            "post": {
                "tags": [
                    "parking-place-controller"
                ],
                "summary": "Get sub district details",
                "operationId": "getSubDistrictDetailsByParkingPlaceIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "SubDistrictByParkingPlaceID",
                        "description": "{ \"ParkingPlaceId\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/remove/parkingPlace": {
            "post": {
                "tags": [
                    "parking-place-controller"
                ],
                "summary": "Removes parking place",
                "operationId": "deleteParkingPlaceUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlaceMaster",
                        "description": "{\"parkingPlaceID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/remove/userParkingPlace": {
            "post": {
                "tags": [
                    "user-parking-place-map-controller"
                ],
                "summary": "Remove user parking place",
                "operationId": "deleteuserParkingPlaceDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userParkingPlaces",
                        "description": "{\"vanServicePointMapID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/save/userParkingPlaces": {
            "post": {
                "tags": [
                    "user-parking-place-map-controller"
                ],
                "summary": "Save user parking places",
                "operationId": "saveuserParkingPlacesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userParkingPlaces",
                        "description": "{\"userID\":\"integer\", \"parkingPlaceID\":\"integer\", \"providerServiceMapID\":\"integer\", \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceMaster/update/parkingPlaceDetails": {
            "post": {
                "tags": [
                    "parking-place-controller"
                ],
                "summary": "Update parking place details",
                "operationId": "updateParkingPlaceDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlaceData",
                        "description": "{\"parkingPlaceName\":\"string\", \"parkingPlaceDesc\":\"string\", \"providerServiceMapID\":\"integer\", \"areaHQAddress\":\"string\", \"countryID\":\"integer\", \"stateID\":\"integer\", \"districtID\":\"integer\", \"districtBlockID\":\"integer\", \"districtBranchID\":\"integer\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceTalukMapping/activate/parkingPlacesTalukMapping": {
            "post": {
                "tags": [
                    "parking-place-taluk-mapping-controller"
                ],
                "summary": "Activate/deactivate parking place and taluk mapping ",
                "operationId": "activateparkingPlacesTalukMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlace",
                        "description": "{\"ppSubDistrictMapID\":integer,\"deleted\":boolean}",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ParkingplaceTalukMapping"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceTalukMapping/create/parkingPlacesTalukMapping": {
            "post": {
                "tags": [
                    "parking-place-taluk-mapping-controller"
                ],
                "summary": "Stores parking place and taluk mapping details",
                "operationId": "parkingPlacesTalukMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlace",
                        "description": "{\"parkingPlaceName\":\"string\", \"parkingPlaceDesc\":\"string\", \"providerServiceMapID\":\"integer\", \"areaHQAddress\":\"string\", \"countryID\":\"integer\", \"stateID\":\"integer\", \"districtID\":\"integer\", \"districtBlockID\":\"integer\", \"districtBranchID\":\"integer\",  \"createdBy\":\"string\", \"deleted\":\"boolean\"}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParkingplaceTalukMapping"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceTalukMapping/get/unmappedtaluk": {
            "post": {
                "tags": [
                    "parking-place-taluk-mapping-controller"
                ],
                "summary": "Get unmapped taluk by district id",
                "operationId": "getunmappedtalukUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlace",
                        "description": "{\"districtID\":integer,\"providerServiceMapID\":integer}",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ParkingplaceTalukMapping"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceTalukMapping/getall/parkingPlacesTalukMapping": {
            "post": {
                "tags": [
                    "parking-place-taluk-mapping-controller"
                ],
                "summary": "Get all parking place and taluk mapping based on parking place id",
                "operationId": "getallparkingPlacesTalukMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlace",
                        "description": "{\"parkingPlaceID\":\"string\"}",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ParkingplaceTalukMapping"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceTalukMapping/getbyid/parkingPlacesTalukMapping": {
            "post": {
                "tags": [
                    "parking-place-taluk-mapping-controller"
                ],
                "summary": "Get parking place and taluk mapping by map id",
                "operationId": "getparkingPlacesTalukMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlace",
                        "description": "{\"ppSubDistrictMapID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ParkingplaceTalukMapping"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceTalukMapping/getbyppidanddid/parkingPlacesTalukMapping": {
            "post": {
                "tags": [
                    "parking-place-taluk-mapping-controller"
                ],
                "summary": "Get all parking place and taluk mapping based on parking place id",
                "operationId": "getafilterparkingPlacesTalukMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlace",
                        "description": "{\"parkingPlaceID\":\"integer\",\"districtID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ParkingplaceTalukMapping"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/parkingPlaceTalukMapping/update/parkingPlacesTalukMapping": {
            "post": {
                "tags": [
                    "parking-place-taluk-mapping-controller"
                ],
                "summary": "Update parking place and taluk mapping details",
                "operationId": "updateparkingPlacesTalukMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "parkingPlace",
                        "description": "{\"ppSubDistrictMapID\": integer,\"parkingPlaceID\":integer,\"districtBlockID\":integer,\"districtID\":integer,\"providerServiceMapID\":integer,\"createdBy\":string}",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ParkingplaceTalukMapping"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/patientIssue": {
            "post": {
                "tags": [
                    "stock-exit-controller"
                ],
                "summary": "Store service point details",
                "operationId": "patientIssueUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "patientIssue",
                        "description": "patientIssue",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/T_PatientIssue"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/physicalStockEntry": {
            "post": {
                "tags": [
                    "stock-entry-controller"
                ],
                "summary": "Store service point details",
                "operationId": "physicalStockEntryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "physicalStockEntry",
                        "description": "physicalStockEntry",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PhysicalStockEntry"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/providerCreationAndMapping": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Create and map provder",
                "operationId": "providerCreationAndMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "comingRequest",
                        "description": "comingRequest",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/providerUpdate": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Provider update",
                "operationId": "providerUpdateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "providerupdate",
                        "description": "providerupdate",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/providerdelete": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Provider delete",
                "operationId": "providerDeleteUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "providerDelete",
                        "description": "providerDelete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/saveConf": {
            "post": {
                "tags": [
                    "nodal-config-controller"
                ],
                "summary": "Save config",
                "operationId": "saveConfigUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createEmailRequests",
                        "description": "createEmailRequests",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CreateNodalEmailRequestModel"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/saveConfig": {
            "post": {
                "tags": [
                    "email-config-controller"
                ],
                "summary": "Save configuration",
                "operationId": "saveConfigUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createEmailRequests",
                        "description": "createEmailRequests",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CreateAuthEmailRequestModel"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/saveQuestionnaire": {
            "post": {
                "tags": [
                    "questionnaire-controller"
                ],
                "summary": "Save questionnaire",
                "operationId": "saveQuestionnaireUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/searchMappedLanguageByUserId": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search mapped language by user id",
                "operationId": "searchMappedLanguageByUserIdUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchMappedLanguageByUserId",
                        "description": "searchMappedLanguageByUserId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/searchMappedRoleByNameorUserId": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Search mapped role by name or user id",
                "operationId": "searchMappedRoleByNameorUserIdUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "searchMappedRoleByNameorUserId",
                        "description": "searchMappedRoleByNameorUserId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/searchRoleTM": {
            "post": {
                "tags": [
                    "role-master-controller"
                ],
                "summary": "Search TM role",
                "operationId": "searchRoleTMUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stateserviceMapping1",
                        "description": "stateserviceMapping1",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/servicePointMaster/create/servicePointVillageMaps": {
            "post": {
                "tags": [
                    "service-point-controller"
                ],
                "summary": "Store service point details by village map",
                "operationId": "saveServicePointVillageMapUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "servicePointVillageMap",
                        "description": "{\"ServicePointID\":\"integer\", \"DistrictBranchID\":\"integer\", \"providerServiceMapID\":\"integer\", \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/servicePointMaster/create/servicePoints": {
            "post": {
                "tags": [
                    "service-point-controller"
                ],
                "summary": "Store service point details",
                "operationId": "saveServicePointUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "ServicePointMaster",
                        "description": "{\"servicePointName\":\"string\", \"servicePointDesc\":\"string\", \"providerServiceMapID\":\"integer\", \"servicePointHQAddress\":\"string\", \"countryID\":\"integer\", \"stateID\":\"integer\", \"districtID\":\"integer\", \"districtBlockID\":\"integer\", \"districtBranchID\":\"integer\",  \"createdBy\":\"string\", \"deleted\":\"boolean\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/servicePointMaster/edit/servicePoint": {
            "post": {
                "tags": [
                    "service-point-controller"
                ],
                "summary": "Edit service point",
                "operationId": "editServicePointUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "ServicePointMaster",
                        "description": "{\"servicePointID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/servicePointMaster/edit/servicePointVillageMap": {
            "post": {
                "tags": [
                    "service-point-controller"
                ],
                "summary": "Edit service point by village map",
                "operationId": "editServicePointVillageMapUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "servicePointVillageMap",
                        "description": "{\"servicePointVillageMapID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/servicePointMaster/get/servicePointVillageMaps": {
            "post": {
                "tags": [
                    "service-point-controller"
                ],
                "summary": "Get service point details by village map",
                "operationId": "getServicePointVillageMapsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "servicePointVillageMap",
                        "description": "{\"stateID\":\"integer\", \"districtID\":\"integer\", \"parkingPlaceID\":\"integer\", \"servicePointID\":\"integer\", \"serviceProviderID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/servicePointMaster/get/servicePoints": {
            "post": {
                "tags": [
                    "service-point-controller"
                ],
                "summary": "Get service point details",
                "operationId": "getServicePointsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "ServicePointMaster",
                        "description": "{\"stateID\":\"integer\", \"districtID\":\"integer\", \"parkingPlaceID\":\"integer\", \"serviceProviderID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/servicePointMaster/get/unmappedvillages": {
            "post": {
                "tags": [
                    "service-point-controller"
                ],
                "summary": "Get unmapped villages",
                "operationId": "unmappedvillagesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "servicePointVillageMap",
                        "description": "{\"districtBlockID\":\"integer\", \"providerServiceMapID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/servicePointMaster/remove/servicePoint": {
            "post": {
                "tags": [
                    "service-point-controller"
                ],
                "summary": "Remove service point",
                "operationId": "deleteServicePointUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "ServicePointMaster",
                        "description": "{\"servicePointID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/servicePointMaster/remove/servicePointVillageMap": {
            "post": {
                "tags": [
                    "service-point-controller"
                ],
                "summary": "Remove service point by village map",
                "operationId": "deleteServicePointVillageMapUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "servicePointVillageMap",
                        "description": "{\"servicePointVillageMapID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/signature1/signexist/{userID}": {
            "get": {
                "tags": [
                    "employee-signature-controller"
                ],
                "summary": "Sign exist file",
                "operationId": "existFileUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "userID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/signature1/upload": {
            "post": {
                "tags": [
                    "employee-signature-controller"
                ],
                "summary": "Upload",
                "operationId": "uploadFileUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "emp",
                        "description": "emp",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeSignature"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/signature1/{userID}": {
            "get": {
                "tags": [
                    "employee-signature-controller"
                ],
                "summary": "User id",
                "operationId": "fetchFileUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "userID",
                        "in": "path",
                        "description": "userID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "byte"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/snomed/editSnomedMappingData": {
            "post": {
                "tags": [
                    "snomed-mapping-controller"
                ],
                "summary": "Edit snomed master",
                "operationId": "editSnomedMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "requestObj",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/snomed/fetchSnomedWorklist": {
            "post": {
                "tags": [
                    "snomed-mapping-controller"
                ],
                "summary": "Fetch snomed worklist",
                "operationId": "fetchSnomedWorklistUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "requestObj",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/snomed/saveSnomedMappingData": {
            "post": {
                "tags": [
                    "snomed-mapping-controller"
                ],
                "summary": "Save snomed master",
                "operationId": "saveSnomedMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "requestObj",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/snomed/updateStatus": {
            "post": {
                "tags": [
                    "snomed-mapping-controller"
                ],
                "summary": "Update status",
                "operationId": "updateStatusUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "requestObj",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/swymed/createUser": {
            "post": {
                "tags": [
                    "swy-med-controller"
                ],
                "summary": "Create user",
                "operationId": "createUserTMUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userSwymed",
                        "description": "userSwymed",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserSwymed"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/swymed/deleteUser/{userSwymedMapID}/{deletedflag}/{ModifiedBy}": {
            "get": {
                "tags": [
                    "swy-med-controller"
                ],
                "summary": "Delete user",
                "operationId": "createUserTMUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ModifiedBy",
                        "in": "path",
                        "description": "ModifiedBy",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userSwymedMapID",
                        "in": "path",
                        "description": "userSwymedMapID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "deletedflag",
                        "in": "path",
                        "description": "deletedflag",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/swymed/editUser": {
            "post": {
                "tags": [
                    "swy-med-controller"
                ],
                "summary": "Edit user",
                "operationId": "editUserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userSwymed",
                        "description": "userSwymed",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserSwymed"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/swymed/getdomain/{serviceproviderID}": {
            "post": {
                "tags": [
                    "swy-med-controller"
                ],
                "summary": "Get domain",
                "operationId": "getdomainUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serviceproviderID",
                        "in": "path",
                        "description": "serviceproviderID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/swymed/getmappedUsers/{serviceproviderID}": {
            "post": {
                "tags": [
                    "swy-med-controller"
                ],
                "summary": "Get mapped user",
                "operationId": "getmappedUsersUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serviceproviderID",
                        "in": "path",
                        "description": "serviceproviderID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/swymed/getunmappedUser/{serviceproviderID}/{designationID}": {
            "get": {
                "tags": [
                    "swy-med-controller"
                ],
                "summary": "Get unmapped user",
                "operationId": "getUserTMUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "serviceproviderID",
                        "in": "path",
                        "description": "serviceproviderID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "designationID",
                        "in": "path",
                        "description": "designationID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/t/unmappCategoryforFeedbackNature": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Unmap category for feedback nature",
                "operationId": "unmappCategoryforFeedbackNatureUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "getmapedCategorytoFeedbackNature",
                        "description": "getmapedCategorytoFeedbackNature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/updateAgentIds": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Update agent ids",
                "operationId": "updateAgentIdsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "{\"isAvailable\":\"Boolean - is agent ID available for future use\", \"usrMappingID\":\"Integer - user service role mapping id if isavailable is sent as false\", \"usrAgentMappingID\": \"Integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/updateCTICampaignNameMapping": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Update CTI campaign name mapping",
                "operationId": "updateCTICampaignNameMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "{\"cti_CampaignName\":\"String new campaign name\", \"usrAgentMappingID\": \"Integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/updateCalibrationStrip": {
            "post": {
                "tags": [
                    "calibration-controller"
                ],
                "summary": "Update calibration strip",
                "operationId": "updateCalibrationStripUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "{\"stripCode\":\"String\",\"expiryDate\":\"Timestamp\",\"providerServiceMapID\":\"Integer\",\"createdBy\":\"String\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/updateDrugStrangth": {
            "post": {
                "tags": [
                    "drug-srangth"
                ],
                "summary": "Update drug strength",
                "operationId": "updateDrugStrangthUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateDrugStrangth",
                        "description": "updateDrugStrangth",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/updateEmailConfig": {
            "post": {
                "tags": [
                    "email-config-controller"
                ],
                "summary": "Update email configuration",
                "operationId": "updateEmailConfigUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateEmailRequest",
                        "description": "updateEmailRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateAuthEmailRequest"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/updateNodalEmailConfig": {
            "post": {
                "tags": [
                    "nodal-config-controller"
                ],
                "summary": "Update nodal email config",
                "operationId": "updateNodalEmailConfigUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateEmailRequest",
                        "description": "updateEmailRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateNodalEmailRequest"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/updateProvider": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update provider",
                "operationId": "updateProviderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "comingRequest",
                        "description": "comingRequest",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/updateProviderAdmin": {
            "post": {
                "tags": [
                    "provider-on-board-controller"
                ],
                "summary": "Update provider admin",
                "operationId": "updateProviderAdminUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateProviderAdmin",
                        "description": "updateProviderAdmin",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/updateUserLanguageMapping": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Update user language mapping",
                "operationId": "updateUserLanguageMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateUserLanguageMapping",
                        "description": "updateUserLanguageMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/updateUserRoleMapping": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "Update user role mapping",
                "operationId": "updateUserRoleMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateUserRoleMapping",
                        "description": "updateUserRoleMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/uptsu/saveFacility": {
            "post": {
                "tags": [
                    "facility-controller"
                ],
                "summary": "Save facility",
                "operationId": "saveFacilityDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "uploadReq",
                        "description": "[\r\n  {\r\n    \"createdBy\": \"String\",\r\n    \"fileName\": \"String\",\r\n    \"providerServiceMapID\": Integer,\r\n    \"fileExtension\": \"String\"\r\n    \"fileContent\": \"String\"\r\n  }]",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/userLanguageMapping": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "User language mapping",
                "operationId": "UserLangMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deletedUserDetails",
                        "description": "deletedUserDetails",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/userRoleMapping": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "User role mapping",
                "operationId": "UserRoleMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userRoleMapping",
                        "description": "userRoleMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/userRoleMappings": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "User role mappings",
                "operationId": "UserRoleMappingsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userRoleMapping",
                        "description": "userRoleMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/usrRoleAndCtiMapping": {
            "post": {
                "tags": [
                    "employee-master-controller"
                ],
                "summary": "User role and cti mapping",
                "operationId": "usrRoleAndCtiMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "usrRoleAndCtiMapping",
                        "description": "usrRoleAndCtiMapping",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/get/vanDetails": {
            "post": {
                "tags": [
                    "van-master-controller"
                ],
                "summary": "Get van details",
                "operationId": "getServicePointsUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanMaster",
                        "description": "{\"stateID\":\"integer\", \"districtID\":\"integer\", \"parkingPlaceID\":\"integer\", \"serviceProviderID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/get/vanServicePointMappings": {
            "post": {
                "tags": [
                    "van-service-point-mapping-controller"
                ],
                "summary": "Get van service point mappings",
                "operationId": "getVanServicePointMappingsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanMaster",
                        "description": "{\"stateID\":\"integer\", \"districtID\":\"integer\", \"parkingPlaceID\":\"integer\", \"serviceProviderID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/get/vanServicePointMappingsV1": {
            "post": {
                "tags": [
                    "van-service-point-mapping-controller"
                ],
                "summary": "Get van service point mappings",
                "operationId": "vanServicePointMappingsV1UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanMaster",
                        "description": "{ \"vanID\":\"integer\", \"parkingPlaceID\":\"integer\", \"providerServiceMapID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/get/vanTypes": {
            "post": {
                "tags": [
                    "van-master-controller"
                ],
                "summary": "Get van types",
                "operationId": "getVanTypesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/getVanFromFacilityID": {
            "post": {
                "tags": [
                    "van-master-controller"
                ],
                "summary": "Get van details",
                "operationId": "getVanFromFacilityIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanMaster",
                        "description": "{\"providerServiceMapID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/M_Van"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/getVanMaster": {
            "post": {
                "tags": [
                    "van-master-controller"
                ],
                "summary": "Get van details",
                "operationId": "getVanMasterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanMaster",
                        "description": "{\"providerServiceMapID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/remove/vanDetails": {
            "post": {
                "tags": [
                    "van-master-controller"
                ],
                "summary": "Remove van",
                "operationId": "deleteVanDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanMaster",
                        "description": "{\"vanID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/remove/vanServicePointMapping": {
            "post": {
                "tags": [
                    "van-service-point-mapping-controller"
                ],
                "summary": "Remove van service point mapping",
                "operationId": "deleteVanServicePointMappingDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanServicePointMapping",
                        "description": "{\"vanServicePointMapID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/remove/vanTypeDetails": {
            "post": {
                "tags": [
                    "van-master-controller"
                ],
                "summary": "Remove van type",
                "operationId": "deleteVanTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanMaster",
                        "description": "{\"vanTypeID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/save/vanDetails": {
            "post": {
                "tags": [
                    "van-master-controller"
                ],
                "summary": "Store van details",
                "operationId": "saveVanDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanDetails",
                        "description": "{\"vanName\":\"string\", \"vehicalNo\":\"string\", \"providerServiceMapID\":\"integer\", \"countryID\":\"integer\", \"stateID\":\"integer\", \"districtID\":\"integer\",  \"createdBy\":\"string\", \"deleted\":\"boolean\" , \"swymedDomain\":\"string\", \"swymedID\":\"string\", \"swymedEmail\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/save/vanServicePointMappings": {
            "post": {
                "tags": [
                    "van-service-point-mapping-controller"
                ],
                "summary": "Store van service point mappings",
                "operationId": "saveVanServicePointMappingsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanServicePointMappings",
                        "description": "{\"vanID\":\"integer\", \"servicePointID\":\"integer\", \"providerServiceMapID\":\"integer\", \"vanSession\":\"string\", \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/save/vanTypeDetails": {
            "post": {
                "tags": [
                    "van-master-controller"
                ],
                "summary": "Store van type details",
                "operationId": "saveVanTypeDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanDetails",
                        "description": "{\"vanType\":\"string\", \"vanTypeDesc\":\"string\", \"providerServiceMapID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/vanMaster/update/vanDetails": {
            "post": {
                "tags": [
                    "van-master-controller"
                ],
                "summary": "Update van details",
                "operationId": "updateZoneDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vanDetails",
                        "description": "{\"vanID\":\"integer\", \"vanName\":\"string\", \"vehicalNo\":\"string\", \"providerServiceMapID\":\"integer\", \"countryID\":\"integer\", \"stateID\":\"integer\", \"districtID\":\"integer\",  \"createdBy\":\"string\", \"deleted\":\"boolean\",  \"swymedDomain\":\"string\", \"swymedID\":\"string\", \"swymedEmail\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/version": {
            "get": {
                "tags": [
                    "version-controller"
                ],
                "summary": "Version information",
                "operationId": "versionInformationUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/villageMaster/get/Villages": {
            "post": {
                "tags": [
                    "village-master-controller"
                ],
                "summary": "Get village details",
                "operationId": "getVillagesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "villageMaster",
                        "description": "{\"blockID\":\"Integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/villageMaster/remove/village": {
            "post": {
                "tags": [
                    "village-master-controller"
                ],
                "summary": "Remove village",
                "operationId": "deleteVillageUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "villageData",
                        "description": "{\"districtBranchID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/villageMaster/save/VillageDetails": {
            "post": {
                "tags": [
                    "village-master-controller"
                ],
                "summary": "Store village details",
                "operationId": "saveVillageDetailsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "villageMaster",
                        "description": "{\"blockID\":\"Integer\", \"panchayatName\":\"String\", \"villageName\":\"String\", \"habitat\":\"String\", \"pinCode\":\"String\",\"govVillageID\":\"Integer\", \"govSubDistrictID\":\"Integer\", \"deleted\":\"Boolean\", \"blockName\":\"String\", \"createdBy\":\"String\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/villageMaster/update/villageData": {
            "post": {
                "tags": [
                    "village-master-controller"
                ],
                "summary": "Update village details",
                "operationId": "updateVillageDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "villageData",
                        "description": "{\"districtBranchID\":\"Integer\",\"blockID\":\"Integer\", \"panchayatName\":\"String\", \"villageName\":\"String\", \"habitat\":\"String\", \"pinCode\":\"String\", \"govVillageID\":\"Integer\", \"govSubDistrictID\":\"Integer\", \"modifiedBy\":\"String\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/zonemaster/edit/zoneDistrictMapping": {
            "post": {
                "tags": [
                    "zone-master-controller"
                ],
                "summary": "Edit zone district",
                "operationId": "editZoneDistrictUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "zonemaster",
                        "description": "{\"ZoneID\":\"integer\", \"DistrictID\":\"integer\", \"providerServiceMapID\":\"integer\",  \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/zonemaster/get/zoneDistrictMappings": {
            "post": {
                "tags": [
                    "zone-master-controller"
                ],
                "summary": "Get zone details",
                "operationId": "getZoneDistrictMappingsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "{\"serviceProviderID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/zonemaster/get/zones": {
            "post": {
                "tags": [
                    "zone-master-controller"
                ],
                "summary": "Get zone details",
                "operationId": "getZonesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestObj",
                        "description": "{\"providerServiceMapID\":\"integer\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/zonemaster/getdistrictMappedtoZone": {
            "post": {
                "tags": [
                    "zone-master-controller"
                ],
                "summary": "Zone district mapping",
                "operationId": "getMappedDistrictByZoneIDUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "zoneMappedDistrict",
                        "description": "zoneMappedDistrict",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/zonemaster/remove/zone": {
            "post": {
                "tags": [
                    "zone-master-controller"
                ],
                "summary": "Remove zone",
                "operationId": "deleteZoneUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "zoneData",
                        "description": "{\"ZoneID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/zonemaster/remove/zoneDistrictMapping": {
            "post": {
                "tags": [
                    "zone-master-controller"
                ],
                "summary": "Remove zone district mapping",
                "operationId": "deleteZoneDistrictMappingUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "zoneData",
                        "description": "{\"zoneDistrictMapID\":\"integer\", \"deleted\":\"boolean\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/zonemaster/save/zone": {
            "post": {
                "tags": [
                    "zone-master-controller"
                ],
                "summary": "Store zone details",
                "operationId": "saveZoneUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "zonemaster",
                        "description": "{\"zoneName\":\"string\", \"zoneDesc\":\"string\", \"providerServiceMapID\":\"integer\", \"zoneHQAddress\":\"string\", \"stateID\":\"string\", \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/zonemaster/save/zoneDistrictMapping": {
            "post": {
                "tags": [
                    "zone-master-controller"
                ],
                "summary": "Map zone with district",
                "operationId": "mapZoneWithDistrictUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "zonemaster",
                        "description": "{\"ZoneID\":\"integer\", \"DistrictID\":\"integer\", \"providerServiceMapID\":\"integer\",  \"createdBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/zonemaster/update/zoneData": {
            "post": {
                "tags": [
                    "zone-master-controller"
                ],
                "summary": "Update zone details",
                "operationId": "updateZoneDataUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "zoneData",
                        "description": "{\"zoneID\":\"integer\", \"zoneName\":\"string\", \"zoneDesc\":\"string\", \"stateID\":\"string\", \"zoneHQAddress\":\"string\", \"modifiedBy\":\"string\"}",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "M_Pharmacologicalcategory": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "pharmCategoryCode": {
                    "type": "string"
                },
                "pharmCategoryDesc": {
                    "type": "string"
                },
                "pharmCategoryName": {
                    "type": "string"
                },
                "pharmacologyCategoryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "M_City": {
            "type": "object",
            "properties": {
                "cityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "cityName": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "m_UserDemographics": {
                    "$ref": "#/definitions/M_UserDemographics"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AuthEmailRequest": {
            "type": "object",
            "properties": {
                "authorityEmailID": {
                    "type": "integer",
                    "format": "int32"
                },
                "blockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "deleted": {
                    "type": "boolean"
                },
                "designationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtBranchMappingID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CreateNodalEmailRequestModel": {
            "type": "object",
            "properties": {
                "authorityName": {
                    "type": "string"
                },
                "blockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "contactNo": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "designationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtBranchMappingID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "emailID": {
                    "type": "string"
                },
                "mobileNo": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UserSwymed": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "designationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "designationName": {
                    "type": "string"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "swymedDomain": {
                    "type": "string"
                },
                "swymedEmailID": {
                    "type": "string"
                },
                "swymedID": {
                    "type": "integer",
                    "format": "int64"
                },
                "swymedPassword": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/M_UserTemp"
                },
                "userDeleted": {
                    "type": "boolean"
                },
                "userID": {
                    "type": "integer",
                    "format": "int64"
                },
                "userName": {
                    "type": "string"
                },
                "userSwymedMapID": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "M_Role": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "isWrapUpTime": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "roleDesc": {
                    "type": "string"
                },
                "roleFor": {
                    "type": "integer",
                    "format": "int32"
                },
                "roleID": {
                    "type": "integer",
                    "format": "int32"
                },
                "roleName": {
                    "type": "string"
                },
                "wrapUpTime": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DistrictBranchMapping": {
            "type": "object",
            "properties": {
                "blockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "blockName": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtBranchID": {
                    "type": "integer",
                    "format": "int32"
                },
                "govSubDistrictID": {
                    "type": "integer",
                    "format": "int32"
                },
                "govVillageID": {
                    "type": "integer",
                    "format": "int32"
                },
                "habitat": {
                    "type": "string"
                },
                "isRural": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "panchayatName": {
                    "type": "string"
                },
                "pinCode": {
                    "type": "string"
                },
                "villageName": {
                    "type": "string"
                }
            }
        },
        "M_ServiceMaster": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "isNational": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "serviceDesc": {
                    "type": "string"
                },
                "serviceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "M_Parkingplace": {
            "type": "object",
            "properties": {
                "areaHQAddress": {
                    "type": "string"
                },
                "blockName": {
                    "type": "string"
                },
                "countryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryName": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtBlock": {
                    "$ref": "#/definitions/DistrictBlock"
                },
                "districtBlockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtBranchID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtBranchMapping": {
                    "$ref": "#/definitions/DistrictBranchMapping"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtName": {
                    "type": "string"
                },
                "facilityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "isFacility": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "m_country": {
                    "$ref": "#/definitions/M_Country"
                },
                "m_district": {
                    "$ref": "#/definitions/M_District"
                },
                "m_providerServiceMapping": {
                    "$ref": "#/definitions/M_ProviderServiceMapping"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "parkingPlaceDesc": {
                    "type": "string"
                },
                "parkingPlaceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "parkingPlaceName": {
                    "type": "string"
                },
                "processed": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "serviceProviderID": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/State"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateName": {
                    "type": "string"
                },
                "villageName": {
                    "type": "string"
                },
                "zone": {
                    "$ref": "#/definitions/M_Zone"
                },
                "zoneID": {
                    "type": "integer",
                    "format": "int32"
                },
                "zoneName": {
                    "type": "string"
                }
            }
        },
        "TMinput": {
            "type": "object",
            "properties": {
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "screenName": {
                    "type": "string"
                },
                "serviceproviderID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_ItemCategory": {
            "type": "object",
            "properties": {
                "alertBeforeDays": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "issueType": {
                    "type": "string"
                },
                "itemCategoryCode": {
                    "type": "string"
                },
                "itemCategoryDesc": {
                    "type": "string"
                },
                "itemCategoryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemCategoryName": {
                    "type": "string"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "processed": {
                    "$ref": "#/definitions/Character"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "M_Manufacturer": {
            "type": "object",
            "properties": {
                "addressLine1": {
                    "type": "string"
                },
                "addressLine2": {
                    "type": "string"
                },
                "cST_GST_No": {
                    "type": "string"
                },
                "contactPerson": {
                    "type": "string"
                },
                "countryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "manufacturerCode": {
                    "type": "string"
                },
                "manufacturerDesc": {
                    "type": "string"
                },
                "manufacturerID": {
                    "type": "integer",
                    "format": "int32"
                },
                "manufacturerName": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "pinCode": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "FetosenseDeviceID": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deactivated": {
                    "type": "boolean"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deviceID": {
                    "type": "string"
                },
                "deviceName": {
                    "type": "string"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "parkingPlaceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "processed": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "vanID": {
                    "type": "integer",
                    "format": "int32"
                },
                "vanName": {
                    "type": "string"
                },
                "vanTypeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "vfdID": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Character": {
            "type": "object"
        },
        "M_Route": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "processed": {
                    "$ref": "#/definitions/Character"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "routeCode": {
                    "type": "string"
                },
                "routeDesc": {
                    "type": "string"
                },
                "routeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "routeName": {
                    "type": "string"
                }
            }
        },
        "T_PatientIssue": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "format": "int32"
                },
                "benRegID": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deleted": {
                    "type": "boolean"
                },
                "doctorName": {
                    "type": "string"
                },
                "facilityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "gender": {
                    "type": "string"
                },
                "issueType": {
                    "type": "string"
                },
                "itemStockExit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ItemStockExit"
                    }
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "parkingPlaceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "patientIssueID": {
                    "type": "integer",
                    "format": "int32"
                },
                "patientName": {
                    "type": "string"
                },
                "prescriptionID": {
                    "type": "integer",
                    "format": "int32"
                },
                "processed": {
                    "$ref": "#/definitions/Character"
                },
                "reference": {
                    "type": "string"
                },
                "vanID": {
                    "type": "integer",
                    "format": "int32"
                },
                "visitID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ItemStockEntry": {
            "type": "object",
            "properties": {
                "batchNo": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deleted": {
                    "type": "boolean"
                },
                "entryType": {
                    "type": "string"
                },
                "entryTypeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "expiryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "facilityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "item": {
                    "$ref": "#/definitions/ItemMaster"
                },
                "itemID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemStockEntryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "physicalStockEntry": {
                    "$ref": "#/definitions/PhysicalStockEntry"
                },
                "processed": {
                    "$ref": "#/definitions/Character"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "quantityInHand": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalCostPrice": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "DistrictBlock": {
            "type": "object",
            "properties": {
                "blockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "blockName": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_UserDemographics": {
            "type": "object",
            "properties": {
                "addressLine1": {
                    "type": "string"
                },
                "addressLine2": {
                    "type": "string"
                },
                "cityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "communityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "demographicID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "fathersName": {
                    "type": "string"
                },
                "isPermanent": {
                    "type": "boolean"
                },
                "isPresent": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "m_City": {
                    "$ref": "#/definitions/M_City"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "mothersName": {
                    "type": "string"
                },
                "permAddressLine1": {
                    "type": "string"
                },
                "permAddressLine2": {
                    "type": "string"
                },
                "permDistrictID": {
                    "type": "integer",
                    "format": "int32"
                },
                "permPinCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "permStateID": {
                    "type": "integer",
                    "format": "int32"
                },
                "permanentAddress": {
                    "type": "string"
                },
                "pinCode": {
                    "type": "string"
                },
                "religionID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                },
                "userID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_Zone": {
            "type": "object",
            "properties": {
                "countryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtBlockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtBranchID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "processed": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                },
                "zoneDesc": {
                    "type": "string"
                },
                "zoneHQAddress": {
                    "type": "string"
                },
                "zoneID": {
                    "type": "integer",
                    "format": "int32"
                },
                "zoneName": {
                    "type": "string"
                }
            }
        },
        "NodalEmailRequest": {
            "type": "object",
            "properties": {
                "authorityEmailID": {
                    "type": "integer",
                    "format": "int32"
                },
                "blockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "deleted": {
                    "type": "boolean"
                },
                "designationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtBranchMappingID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "mobileNo": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_ItemForm": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "itemForm": {
                    "type": "string"
                },
                "itemFormCode": {
                    "type": "string"
                },
                "itemFormDesc": {
                    "type": "string"
                },
                "itemFormID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "processed": {
                    "$ref": "#/definitions/Character"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ItemMaster": {
            "type": "object",
            "properties": {
                "composition": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "discontinued": {
                    "type": "boolean"
                },
                "isEDL": {
                    "type": "boolean"
                },
                "isMedical": {
                    "type": "boolean"
                },
                "isScheduledDrug": {
                    "type": "boolean"
                },
                "itemCategory": {
                    "$ref": "#/definitions/M_ItemCategory"
                },
                "itemCategoryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemCode": {
                    "type": "string"
                },
                "itemDesc": {
                    "type": "string"
                },
                "itemForm": {
                    "$ref": "#/definitions/M_ItemForm"
                },
                "itemFormID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemName": {
                    "type": "string"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "manufacturer": {
                    "$ref": "#/definitions/M_Manufacturer"
                },
                "manufacturerID": {
                    "type": "integer",
                    "format": "int32"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "pharmacologyCategory": {
                    "$ref": "#/definitions/M_Pharmacologicalcategory"
                },
                "pharmacologyCategoryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "processed": {
                    "$ref": "#/definitions/Character"
                },
                "providerServiceMap": {
                    "$ref": "#/definitions/ProviderServiceMappingTO"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "route": {
                    "$ref": "#/definitions/M_Route"
                },
                "routeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "sctCode": {
                    "type": "string"
                },
                "sctTerm": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "strength": {
                    "type": "string"
                },
                "uomID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "State": {
            "type": "object",
            "properties": {
                "countryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "stateCode": {
                    "type": "string"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateName": {
                    "type": "string"
                }
            }
        },
        "UpdateNodalEmailRequest": {
            "type": "object",
            "properties": {
                "authorityEmailID": {
                    "type": "integer",
                    "format": "int32"
                },
                "authorityName": {
                    "type": "string"
                },
                "blockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "contactNo": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "designationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtBranchMappingID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "emailID": {
                    "type": "string"
                },
                "mobileNo": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ItemStockExit": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deleted": {
                    "type": "boolean"
                },
                "exitType": {
                    "type": "string"
                },
                "exitTypeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemStockEntryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemStockExitID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "processed": {
                    "$ref": "#/definitions/Character"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "quantityInHand": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_Facility": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "facilityCode": {
                    "type": "string"
                },
                "facilityDesc": {
                    "type": "string"
                },
                "facilityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "facilityName": {
                    "type": "string"
                },
                "facilityTypeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "isMainFacility": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "location": {
                    "type": "string"
                },
                "mainFacilityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "physicalLocation": {
                    "type": "string"
                },
                "processed": {
                    "$ref": "#/definitions/Character"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "storeType": {
                    "type": "string"
                }
            }
        },
        "M_itemfacilitymapping": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "discontinued": {
                    "type": "boolean"
                },
                "facility": {
                    "$ref": "#/definitions/M_Facility"
                },
                "facilityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemCategoryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemFacilityMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemMasterforFacilityMapping": {
                    "$ref": "#/definitions/ItemMasterforFacilityMapping"
                },
                "itemName": {
                    "type": "string"
                },
                "itemStoreMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "mappingType": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "M_facilityMap": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "facilityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "isMainFacility": {
                    "type": "boolean"
                },
                "oldParkingPlaceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "oldVanID": {
                    "type": "integer",
                    "format": "int32"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "parkingPlaceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "vanID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Timestamp": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer",
                    "format": "int32"
                },
                "hours": {
                    "type": "integer",
                    "format": "int32"
                },
                "minutes": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "nanos": {
                    "type": "integer",
                    "format": "int32"
                },
                "seconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "time": {
                    "type": "integer",
                    "format": "int64"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PhysicalStockEntry": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deleted": {
                    "type": "boolean"
                },
                "itemStockEntry": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ItemStockEntry"
                    }
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "phyEntryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "processed": {
                    "$ref": "#/definitions/Character"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "refNo": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "V_FetchFacility": {
            "type": "object",
            "properties": {
                "areaHQAddress": {
                    "type": "string"
                },
                "facilityCode": {
                    "type": "string"
                },
                "facilityCreatedBy": {
                    "type": "string"
                },
                "facilityCreatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "facilityDeleted": {
                    "type": "boolean"
                },
                "facilityDesc": {
                    "type": "string"
                },
                "facilityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "facilityLastModDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "facilityModifiedBy": {
                    "type": "string"
                },
                "facilityName": {
                    "type": "string"
                },
                "facilityTypeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "isMainFacility": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "mainFacilityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "parkingPlaceDesc": {
                    "type": "string"
                },
                "parkingPlaceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "parkingPlaceName": {
                    "type": "string"
                },
                "physicalLocation": {
                    "type": "string"
                },
                "ppdeleted": {
                    "type": "boolean"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "storeType": {
                    "type": "string"
                },
                "vanDeleted": {
                    "type": "boolean"
                },
                "vanID": {
                    "type": "integer",
                    "format": "int32"
                },
                "vanName": {
                    "type": "string"
                },
                "vanParkingPlaceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "vanTypeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "vehicalNo": {
                    "type": "string"
                }
            }
        },
        "Specialization": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "specialization": {
                    "type": "string"
                },
                "specializationDesc": {
                    "type": "string"
                },
                "specializationID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_VanType": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "processed": {
                    "type": "string"
                },
                "vanType": {
                    "type": "string"
                },
                "vanTypeDesc": {
                    "type": "string"
                },
                "vanTypeID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UpdateAuthEmailRequest": {
            "type": "object",
            "properties": {
                "authorityEmailID": {
                    "type": "integer",
                    "format": "int32"
                },
                "authorityName": {
                    "type": "string"
                },
                "blockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "contactNo": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "designationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtBranchMappingID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "emailID": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "EmployeeSignature": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "fileContent": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "fileType": {
                    "type": "string"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "signature": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                },
                "userID": {
                    "type": "integer",
                    "format": "int64"
                },
                "userSignatureID": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CodeChecker": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ItemMasterforFacilityMapping": {
            "type": "object",
            "properties": {
                "composition": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "discontinued": {
                    "type": "boolean"
                },
                "isMedical": {
                    "type": "boolean"
                },
                "isScheduledDrug": {
                    "type": "boolean"
                },
                "itemCategoryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemCode": {
                    "type": "string"
                },
                "itemDesc": {
                    "type": "string"
                },
                "itemFormID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemID": {
                    "type": "integer",
                    "format": "int32"
                },
                "itemName": {
                    "type": "string"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "manufacturerID": {
                    "type": "integer",
                    "format": "int32"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "pharmacologyCategoryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "processed": {
                    "$ref": "#/definitions/Character"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "routeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "strength": {
                    "type": "string"
                },
                "uomID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_ProviderServiceMapping": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtBlockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "m_district": {
                    "$ref": "#/definitions/M_District"
                },
                "m_serviceMaster": {
                    "$ref": "#/definitions/M_ServiceMaster"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "serviceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "serviceProviderID": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/State"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ParkingplaceTalukMapping": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtBlock": {
                    "$ref": "#/definitions/DistrictBlock"
                },
                "districtBlockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "m_district": {
                    "$ref": "#/definitions/M_District"
                },
                "m_providerServiceMapping": {
                    "$ref": "#/definitions/M_ProviderServiceMapping"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "parkingPlaceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "parkingplace": {
                    "$ref": "#/definitions/M_Parkingplace"
                },
                "ppSubDistrictMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "processed": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_UserTemp": {
            "type": "object",
            "properties": {
                "aadhaarNo": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "designation": {
                    "$ref": "#/definitions/M_Designation"
                },
                "designationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "dob": {
                    "$ref": "#/definitions/Timestamp"
                },
                "doj": {
                    "$ref": "#/definitions/Timestamp"
                },
                "emailID": {
                    "type": "string"
                },
                "emergencyContactNo": {
                    "type": "string"
                },
                "emergencyContactPerson": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "genderID": {
                    "type": "integer",
                    "format": "int32"
                },
                "isSupervisor": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "lastName": {
                    "type": "string"
                },
                "maritalStatusID": {
                    "type": "integer",
                    "format": "int32"
                },
                "middleName": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "pan": {
                    "type": "string"
                },
                "qualificationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "serviceProviderID": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusID": {
                    "type": "integer",
                    "format": "int32"
                },
                "titleID": {
                    "type": "integer",
                    "format": "int32"
                },
                "userID": {
                    "type": "integer",
                    "format": "int64"
                },
                "userName": {
                    "type": "string"
                },
                "userSwymed": {
                    "$ref": "#/definitions/UserSwymed"
                },
                "userSwymedMapID": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "UserSpecializationMapping": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "slotTime_Minute": {
                    "type": "integer",
                    "format": "int32"
                },
                "specialization": {
                    "$ref": "#/definitions/Specialization"
                },
                "specializationDeleted": {
                    "type": "boolean"
                },
                "specializationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "specializationName": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/M_UserTemp"
                },
                "userDeleted": {
                    "type": "boolean"
                },
                "userID": {
                    "type": "integer",
                    "format": "int32"
                },
                "userName": {
                    "type": "string"
                },
                "userSpecializationMapID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_Designation": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "designationDesc": {
                    "type": "string"
                },
                "designationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "designationName": {
                    "type": "string"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "modifiedBy": {
                    "type": "string"
                }
            }
        },
        "M_District": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtName": {
                    "type": "string"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_Country": {
            "type": "object",
            "properties": {
                "continent": {
                    "type": "string"
                },
                "countryCode": {
                    "$ref": "#/definitions/Character"
                },
                "countryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryName": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "m_UserDemographics": {
                    "$ref": "#/definitions/M_UserDemographics"
                },
                "modifiedBy": {
                    "type": "string"
                }
            }
        },
        "CreateAuthEmailRequestModel": {
            "type": "object",
            "properties": {
                "authorityName": {
                    "type": "string"
                },
                "blockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "contactNo": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "designationID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtBranchMappingID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "emailID": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "M_Van": {
            "type": "object",
            "properties": {
                "countryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryName": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtBlockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "facilityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "isFacility": {
                    "type": "boolean"
                },
                "lastModDate": {
                    "type": "string",
                    "format": "date"
                },
                "m_country": {
                    "$ref": "#/definitions/M_Country"
                },
                "m_parkingplace": {
                    "$ref": "#/definitions/M_Parkingplace"
                },
                "m_providerServiceMapping": {
                    "$ref": "#/definitions/M_ProviderServiceMapping"
                },
                "m_vanType": {
                    "$ref": "#/definitions/M_VanType"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "parkingPlaceID": {
                    "type": "integer",
                    "format": "int32"
                },
                "parkingPlaceName": {
                    "type": "string"
                },
                "processed": {
                    "type": "string"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "serviceProviderID": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/State"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                },
                "stateName": {
                    "type": "string"
                },
                "swymedDomain": {
                    "type": "string"
                },
                "swymedEmail": {
                    "type": "string"
                },
                "swymedID": {
                    "type": "string"
                },
                "vanID": {
                    "type": "integer",
                    "format": "int32"
                },
                "vanName": {
                    "type": "string"
                },
                "vanSpokeMapped": {
                    "type": "boolean"
                },
                "vanType": {
                    "type": "string"
                },
                "vanTypeID": {
                    "type": "integer",
                    "format": "int32"
                },
                "vanfetosenseIDmapped": {
                    "type": "boolean"
                },
                "vehicalNo": {
                    "type": "string"
                }
            }
        },
        "ProviderServiceMappingTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cityID": {
                    "type": "integer",
                    "format": "int32"
                },
                "countryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "deleted": {
                    "type": "boolean"
                },
                "districtBlockID": {
                    "type": "integer",
                    "format": "int32"
                },
                "districtID": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastModDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "m_district": {
                    "$ref": "#/definitions/M_District"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "outputMapper": {
                    "$ref": "#/definitions/OutputMapper"
                },
                "providerServiceMapID": {
                    "type": "integer",
                    "format": "int32"
                },
                "serviceID": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "serviceProviderID": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "$ref": "#/definitions/State"
                },
                "stateID": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusID": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "OutputMapper": {
            "type": "object"
        }
    }
}